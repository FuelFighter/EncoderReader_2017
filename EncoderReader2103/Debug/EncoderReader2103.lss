
EncoderReader2103.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  000014b6  0000154a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014b6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001ca  0080011c  0080011c  00001566  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001566  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00001604  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b90  00000000  00000000  0000170c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000625  00000000  00000000  0000229c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a22  00000000  00000000  000028c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f0  00000000  00000000  000032e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000503  00000000  00000000  000035d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000902  00000000  00000000  00003ad7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000043d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
       2:	00 00       	nop
       4:	65 c0       	rjmp	.+202    	; 0xd0 <__bad_interrupt>
       6:	00 00       	nop
       8:	63 c0       	rjmp	.+198    	; 0xd0 <__bad_interrupt>
       a:	00 00       	nop
       c:	61 c0       	rjmp	.+194    	; 0xd0 <__bad_interrupt>
       e:	00 00       	nop
      10:	5f c0       	rjmp	.+190    	; 0xd0 <__bad_interrupt>
      12:	00 00       	nop
      14:	5d c0       	rjmp	.+186    	; 0xd0 <__bad_interrupt>
      16:	00 00       	nop
      18:	5b c0       	rjmp	.+182    	; 0xd0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	59 c0       	rjmp	.+178    	; 0xd0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	57 c0       	rjmp	.+174    	; 0xd0 <__bad_interrupt>
      22:	00 00       	nop
      24:	55 c0       	rjmp	.+170    	; 0xd0 <__bad_interrupt>
      26:	00 00       	nop
      28:	6f c4       	rjmp	.+2270   	; 0x908 <__vector_10>
      2a:	00 00       	nop
      2c:	51 c0       	rjmp	.+162    	; 0xd0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4f c0       	rjmp	.+158    	; 0xd0 <__bad_interrupt>
      32:	00 00       	nop
      34:	4d c0       	rjmp	.+154    	; 0xd0 <__bad_interrupt>
      36:	00 00       	nop
      38:	4b c0       	rjmp	.+150    	; 0xd0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	3c c4       	rjmp	.+2168   	; 0x8b6 <__vector_15>
      3e:	00 00       	nop
      40:	47 c0       	rjmp	.+142    	; 0xd0 <__bad_interrupt>
      42:	00 00       	nop
      44:	30 c2       	rjmp	.+1120   	; 0x4a6 <__vector_17>
      46:	00 00       	nop
      48:	44 c0       	rjmp	.+136    	; 0xd2 <__vector_18>
      4a:	00 00       	nop
      4c:	41 c0       	rjmp	.+130    	; 0xd0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3f c0       	rjmp	.+126    	; 0xd0 <__bad_interrupt>
      52:	00 00       	nop
      54:	3d c0       	rjmp	.+122    	; 0xd0 <__bad_interrupt>
      56:	00 00       	nop
      58:	3b c0       	rjmp	.+118    	; 0xd0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	39 c0       	rjmp	.+114    	; 0xd0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	37 c0       	rjmp	.+110    	; 0xd0 <__bad_interrupt>
      62:	00 00       	nop
      64:	35 c0       	rjmp	.+106    	; 0xd0 <__bad_interrupt>
      66:	00 00       	nop
      68:	33 c0       	rjmp	.+102    	; 0xd0 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	31 c0       	rjmp	.+98     	; 0xd0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2f c0       	rjmp	.+94     	; 0xd0 <__bad_interrupt>
      72:	00 00       	nop
      74:	2d c0       	rjmp	.+90     	; 0xd0 <__bad_interrupt>
      76:	00 00       	nop
      78:	2b c0       	rjmp	.+86     	; 0xd0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6d c4       	rjmp	.+2266   	; 0x958 <__vector_31>
      7e:	00 00       	nop
      80:	27 c0       	rjmp	.+78     	; 0xd0 <__bad_interrupt>
      82:	00 00       	nop
      84:	25 c0       	rjmp	.+74     	; 0xd0 <__bad_interrupt>
      86:	00 00       	nop
      88:	23 c0       	rjmp	.+70     	; 0xd0 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	21 c0       	rjmp	.+66     	; 0xd0 <__bad_interrupt>
      8e:	00 00       	nop
      90:	1f c0       	rjmp	.+62     	; 0xd0 <__bad_interrupt>
	...

00000094 <__ctors_end>:
      94:	11 24       	eor	r1, r1
      96:	1f be       	out	0x3f, r1	; 63
      98:	cf ef       	ldi	r28, 0xFF	; 255
      9a:	d0 e1       	ldi	r29, 0x10	; 16
      9c:	de bf       	out	0x3e, r29	; 62
      9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
      a0:	11 e0       	ldi	r17, 0x01	; 1
      a2:	a0 e0       	ldi	r26, 0x00	; 0
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	e6 eb       	ldi	r30, 0xB6	; 182
      a8:	f4 e1       	ldi	r31, 0x14	; 20
      aa:	00 e0       	ldi	r16, 0x00	; 0
      ac:	0b bf       	out	0x3b, r16	; 59
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
      b0:	07 90       	elpm	r0, Z+
      b2:	0d 92       	st	X+, r0
      b4:	ac 31       	cpi	r26, 0x1C	; 28
      b6:	b1 07       	cpc	r27, r17
      b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
      ba:	22 e0       	ldi	r18, 0x02	; 2
      bc:	ac e1       	ldi	r26, 0x1C	; 28
      be:	b1 e0       	ldi	r27, 0x01	; 1
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	a6 3e       	cpi	r26, 0xE6	; 230
      c6:	b2 07       	cpc	r27, r18
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	b4 d2       	rcall	.+1384   	; 0x634 <main>
      cc:	0c 94 59 0a 	jmp	0x14b2	; 0x14b2 <_exit>

000000d0 <__bad_interrupt>:
      d0:	97 cf       	rjmp	.-210    	; 0x0 <__vectors>

000000d2 <__vector_18>:
	if (rx_on != rx_off) {
		rx_off++;
	}

	return true;
}
      d2:	1f 92       	push	r1
      d4:	0f 92       	push	r0
      d6:	0f b6       	in	r0, 0x3f	; 63
      d8:	0f 92       	push	r0
      da:	11 24       	eor	r1, r1
      dc:	0b b6       	in	r0, 0x3b	; 59
      de:	0f 92       	push	r0
      e0:	2f 93       	push	r18
      e2:	3f 93       	push	r19
      e4:	4f 93       	push	r20
      e6:	5f 93       	push	r21
      e8:	6f 93       	push	r22
      ea:	8f 93       	push	r24
      ec:	9f 93       	push	r25
      ee:	af 93       	push	r26
      f0:	bf 93       	push	r27
      f2:	ef 93       	push	r30
      f4:	ff 93       	push	r31
      f6:	cf 93       	push	r28
      f8:	df 93       	push	r29
      fa:	1f 92       	push	r1
      fc:	cd b7       	in	r28, 0x3d	; 61
      fe:	de b7       	in	r29, 0x3e	; 62
     100:	80 91 e0 00 	lds	r24, 0x00E0
     104:	80 ff       	sbrs	r24, 0
     106:	47 c0       	rjmp	.+142    	; 0x196 <__vector_18+0xc4>
     108:	90 91 de 00 	lds	r25, 0x00DE
     10c:	90 ff       	sbrs	r25, 0
     10e:	43 c0       	rjmp	.+134    	; 0x196 <__vector_18+0xc4>
     110:	10 92 ed 00 	sts	0x00ED, r1
     114:	ee ee       	ldi	r30, 0xEE	; 238
     116:	f0 e0       	ldi	r31, 0x00	; 0
     118:	80 81       	ld	r24, Z
     11a:	89 83       	std	Y+1, r24	; 0x01
     11c:	80 81       	ld	r24, Z
     11e:	8f 7b       	andi	r24, 0xBF	; 191
     120:	80 83       	st	Z, r24
     122:	80 91 21 01 	lds	r24, 0x0121
     126:	90 91 20 01 	lds	r25, 0x0120
     12a:	98 17       	cp	r25, r24
     12c:	89 f1       	breq	.+98     	; 0x190 <__vector_18+0xbe>
     12e:	8f 70       	andi	r24, 0x0F	; 15
     130:	2b e0       	ldi	r18, 0x0B	; 11
     132:	82 9f       	mul	r24, r18
     134:	c0 01       	movw	r24, r0
     136:	11 24       	eor	r1, r1
     138:	fc 01       	movw	r30, r24
     13a:	ee 52       	subi	r30, 0x2E	; 46
     13c:	fe 4f       	sbci	r31, 0xFE	; 254
     13e:	20 81       	ld	r18, Z
     140:	20 93 f0 00 	sts	0x00F0, r18
     144:	20 81       	ld	r18, Z
     146:	20 93 f2 00 	sts	0x00F2, r18
     14a:	21 81       	ldd	r18, Z+1	; 0x01
     14c:	20 93 f3 00 	sts	0x00F3, r18
     150:	23 81       	ldd	r18, Z+3	; 0x03
     152:	aa ef       	ldi	r26, 0xFA	; 250
     154:	b0 e0       	ldi	r27, 0x00	; 0
     156:	2c 93       	st	X, r18
     158:	24 81       	ldd	r18, Z+4	; 0x04
     15a:	2c 93       	st	X, r18
     15c:	25 81       	ldd	r18, Z+5	; 0x05
     15e:	2c 93       	st	X, r18
     160:	26 81       	ldd	r18, Z+6	; 0x06
     162:	2c 93       	st	X, r18
     164:	27 81       	ldd	r18, Z+7	; 0x07
     166:	2c 93       	st	X, r18
     168:	20 85       	ldd	r18, Z+8	; 0x08
     16a:	2c 93       	st	X, r18
     16c:	21 85       	ldd	r18, Z+9	; 0x09
     16e:	2c 93       	st	X, r18
     170:	22 85       	ldd	r18, Z+10	; 0x0a
     172:	2c 93       	st	X, r18
     174:	fc 01       	movw	r30, r24
     176:	ec 52       	subi	r30, 0x2C	; 44
     178:	fe 4f       	sbci	r31, 0xFE	; 254
     17a:	80 81       	ld	r24, Z
     17c:	8f 70       	andi	r24, 0x0F	; 15
     17e:	80 64       	ori	r24, 0x40	; 64
     180:	80 93 ef 00 	sts	0x00EF, r24
     184:	80 91 21 01 	lds	r24, 0x0121
     188:	8f 5f       	subi	r24, 0xFF	; 255
     18a:	80 93 21 01 	sts	0x0121, r24
     18e:	7d c0       	rjmp	.+250    	; 0x28a <__vector_18+0x1b8>
     190:	10 92 1f 01 	sts	0x011F, r1
     194:	7a c0       	rjmp	.+244    	; 0x28a <__vector_18+0x1b8>
     196:	81 ff       	sbrs	r24, 1
     198:	78 c0       	rjmp	.+240    	; 0x28a <__vector_18+0x1b8>
     19a:	80 91 de 00 	lds	r24, 0x00DE
     19e:	81 ff       	sbrs	r24, 1
     1a0:	74 c0       	rjmp	.+232    	; 0x28a <__vector_18+0x1b8>
     1a2:	80 e1       	ldi	r24, 0x10	; 16
     1a4:	80 93 ed 00 	sts	0x00ED, r24
     1a8:	80 91 1d 01 	lds	r24, 0x011D
     1ac:	28 2f       	mov	r18, r24
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	90 91 1e 01 	lds	r25, 0x011E
     1b4:	29 1b       	sub	r18, r25
     1b6:	31 09       	sbc	r19, r1
     1b8:	2f 77       	andi	r18, 0x7F	; 127
     1ba:	33 27       	eor	r19, r19
     1bc:	20 31       	cpi	r18, 0x10	; 16
     1be:	31 05       	cpc	r19, r1
     1c0:	0c f0       	brlt	.+2      	; 0x1c4 <__vector_18+0xf2>
     1c2:	58 c0       	rjmp	.+176    	; 0x274 <__vector_18+0x1a2>
     1c4:	e8 2f       	mov	r30, r24
     1c6:	ef 70       	andi	r30, 0x0F	; 15
     1c8:	90 91 ef 00 	lds	r25, 0x00EF
     1cc:	2e 2f       	mov	r18, r30
     1ce:	30 e0       	ldi	r19, 0x00	; 0
     1d0:	4b e0       	ldi	r20, 0x0B	; 11
     1d2:	e4 9f       	mul	r30, r20
     1d4:	f0 01       	movw	r30, r0
     1d6:	11 24       	eor	r1, r1
     1d8:	ee 5d       	subi	r30, 0xDE	; 222
     1da:	fe 4f       	sbci	r31, 0xFE	; 254
     1dc:	9f 70       	andi	r25, 0x0F	; 15
     1de:	42 81       	ldd	r20, Z+2	; 0x02
     1e0:	40 7f       	andi	r20, 0xF0	; 240
     1e2:	94 2b       	or	r25, r20
     1e4:	92 83       	std	Z+2, r25	; 0x02
     1e6:	90 91 f2 00 	lds	r25, 0x00F2
     1ea:	40 91 f0 00 	lds	r20, 0x00F0
     1ee:	47 70       	andi	r20, 0x07	; 7
     1f0:	90 7e       	andi	r25, 0xE0	; 224
     1f2:	94 2b       	or	r25, r20
     1f4:	90 83       	st	Z, r25
     1f6:	90 91 f3 00 	lds	r25, 0x00F3
     1fa:	91 83       	std	Z+1, r25	; 0x01
     1fc:	aa ef       	ldi	r26, 0xFA	; 250
     1fe:	b0 e0       	ldi	r27, 0x00	; 0
     200:	9c 91       	ld	r25, X
     202:	93 83       	std	Z+3, r25	; 0x03
     204:	9c 91       	ld	r25, X
     206:	94 83       	std	Z+4, r25	; 0x04
     208:	9c 91       	ld	r25, X
     20a:	95 83       	std	Z+5, r25	; 0x05
     20c:	9c 91       	ld	r25, X
     20e:	96 83       	std	Z+6, r25	; 0x06
     210:	9c 91       	ld	r25, X
     212:	97 83       	std	Z+7, r25	; 0x07
     214:	9c 91       	ld	r25, X
     216:	90 87       	std	Z+8, r25	; 0x08
     218:	9c 91       	ld	r25, X
     21a:	91 87       	std	Z+9, r25	; 0x09
     21c:	9c 91       	ld	r25, X
     21e:	92 87       	std	Z+10, r25	; 0x0a
     220:	8f 5f       	subi	r24, 0xFF	; 255
     222:	80 93 1d 01 	sts	0x011D, r24
     226:	40 81       	ld	r20, Z
     228:	42 95       	swap	r20
     22a:	46 95       	lsr	r20
     22c:	47 70       	andi	r20, 0x07	; 7
     22e:	51 81       	ldd	r21, Z+1	; 0x01
     230:	65 2f       	mov	r22, r21
     232:	66 0f       	add	r22, r22
     234:	66 0f       	add	r22, r22
     236:	66 0f       	add	r22, r22
     238:	86 2f       	mov	r24, r22
     23a:	84 2b       	or	r24, r20
     23c:	95 2f       	mov	r25, r21
     23e:	92 95       	swap	r25
     240:	96 95       	lsr	r25
     242:	97 70       	andi	r25, 0x07	; 7
     244:	89 2b       	or	r24, r25
     246:	b1 f4       	brne	.+44     	; 0x274 <__vector_18+0x1a2>
     248:	8b e0       	ldi	r24, 0x0B	; 11
     24a:	82 9f       	mul	r24, r18
     24c:	f0 01       	movw	r30, r0
     24e:	83 9f       	mul	r24, r19
     250:	f0 0d       	add	r31, r0
     252:	11 24       	eor	r1, r1
     254:	ee 5d       	subi	r30, 0xDE	; 222
     256:	fe 4f       	sbci	r31, 0xFE	; 254
     258:	83 81       	ldd	r24, Z+3	; 0x03
     25a:	83 30       	cpi	r24, 0x03	; 3
     25c:	59 f4       	brne	.+22     	; 0x274 <__vector_18+0x1a2>
     25e:	98 e0       	ldi	r25, 0x08	; 8
     260:	88 e1       	ldi	r24, 0x18	; 24
     262:	0f b6       	in	r0, 0x3f	; 63
     264:	f8 94       	cli
     266:	a8 95       	wdr
     268:	80 93 60 00 	sts	0x0060, r24
     26c:	0f be       	out	0x3f, r0	; 63
     26e:	90 93 60 00 	sts	0x0060, r25
     272:	ff cf       	rjmp	.-2      	; 0x272 <__vector_18+0x1a0>
     274:	ee ee       	ldi	r30, 0xEE	; 238
     276:	f0 e0       	ldi	r31, 0x00	; 0
     278:	80 81       	ld	r24, Z
     27a:	89 83       	std	Y+1, r24	; 0x01
     27c:	89 81       	ldd	r24, Y+1	; 0x01
     27e:	80 81       	ld	r24, Z
     280:	8f 7d       	andi	r24, 0xDF	; 223
     282:	80 83       	st	Z, r24
     284:	80 e8       	ldi	r24, 0x80	; 128
     286:	80 93 ef 00 	sts	0x00EF, r24
     28a:	0f 90       	pop	r0
     28c:	df 91       	pop	r29
     28e:	cf 91       	pop	r28
     290:	ff 91       	pop	r31
     292:	ef 91       	pop	r30
     294:	bf 91       	pop	r27
     296:	af 91       	pop	r26
     298:	9f 91       	pop	r25
     29a:	8f 91       	pop	r24
     29c:	6f 91       	pop	r22
     29e:	5f 91       	pop	r21
     2a0:	4f 91       	pop	r20
     2a2:	3f 91       	pop	r19
     2a4:	2f 91       	pop	r18
     2a6:	0f 90       	pop	r0
     2a8:	0b be       	out	0x3b, r0	; 59
     2aa:	0f 90       	pop	r0
     2ac:	0f be       	out	0x3f, r0	; 63
     2ae:	0f 90       	pop	r0
     2b0:	1f 90       	pop	r1
     2b2:	18 95       	reti

000002b4 <can_init>:
     2b4:	cf 93       	push	r28
     2b6:	df 93       	push	r29
     2b8:	e8 ed       	ldi	r30, 0xD8	; 216
     2ba:	f0 e0       	ldi	r31, 0x00	; 0
     2bc:	21 e0       	ldi	r18, 0x01	; 1
     2be:	20 83       	st	Z, r18
     2c0:	2e ef       	ldi	r18, 0xFE	; 254
     2c2:	20 93 e2 00 	sts	0x00E2, r18
     2c6:	2c e0       	ldi	r18, 0x0C	; 12
     2c8:	20 93 e3 00 	sts	0x00E3, r18
     2cc:	27 e3       	ldi	r18, 0x37	; 55
     2ce:	20 93 e4 00 	sts	0x00E4, r18
     2d2:	10 92 e7 00 	sts	0x00E7, r1
     2d6:	10 92 e6 00 	sts	0x00E6, r1
     2da:	10 92 e9 00 	sts	0x00E9, r1
     2de:	10 92 e8 00 	sts	0x00E8, r1
     2e2:	10 92 ec 00 	sts	0x00EC, r1
     2e6:	10 92 e5 00 	sts	0x00E5, r1
     2ea:	cd ee       	ldi	r28, 0xED	; 237
     2ec:	d0 e0       	ldi	r29, 0x00	; 0
     2ee:	18 82       	st	Y, r1
     2f0:	ae ee       	ldi	r26, 0xEE	; 238
     2f2:	b0 e0       	ldi	r27, 0x00	; 0
     2f4:	1c 92       	st	X, r1
     2f6:	20 e1       	ldi	r18, 0x10	; 16
     2f8:	28 83       	st	Y, r18
     2fa:	1c 92       	st	X, r1
     2fc:	10 92 f4 00 	sts	0x00F4, r1
     300:	28 2f       	mov	r18, r24
     302:	22 95       	swap	r18
     304:	22 0f       	add	r18, r18
     306:	20 7e       	andi	r18, 0xE0	; 224
     308:	20 93 f6 00 	sts	0x00F6, r18
     30c:	96 95       	lsr	r25
     30e:	87 95       	ror	r24
     310:	96 95       	lsr	r25
     312:	87 95       	ror	r24
     314:	96 95       	lsr	r25
     316:	87 95       	ror	r24
     318:	80 93 f7 00 	sts	0x00F7, r24
     31c:	10 92 f0 00 	sts	0x00F0, r1
     320:	86 2f       	mov	r24, r22
     322:	82 95       	swap	r24
     324:	88 0f       	add	r24, r24
     326:	80 7e       	andi	r24, 0xE0	; 224
     328:	80 93 f2 00 	sts	0x00F2, r24
     32c:	76 95       	lsr	r23
     32e:	67 95       	ror	r22
     330:	76 95       	lsr	r23
     332:	67 95       	ror	r22
     334:	76 95       	lsr	r23
     336:	67 95       	ror	r22
     338:	60 93 f3 00 	sts	0x00F3, r22
     33c:	80 e8       	ldi	r24, 0x80	; 128
     33e:	80 93 ef 00 	sts	0x00EF, r24
     342:	83 e0       	ldi	r24, 0x03	; 3
     344:	80 93 dc 00 	sts	0x00DC, r24
     348:	80 93 de 00 	sts	0x00DE, r24
     34c:	80 eb       	ldi	r24, 0xB0	; 176
     34e:	80 93 db 00 	sts	0x00DB, r24
     352:	82 e0       	ldi	r24, 0x02	; 2
     354:	80 83       	st	Z, r24
     356:	10 92 1c 01 	sts	0x011C, r1
     35a:	df 91       	pop	r29
     35c:	cf 91       	pop	r28
     35e:	08 95       	ret

00000360 <can_send_message>:

bool can_send_message(CanMessage_t* message) {
     360:	cf 93       	push	r28
     362:	df 93       	push	r29
     364:	fc 01       	movw	r30, r24
	bool result = false;

	CANGIE &= ~(1 << ENIT);
     366:	ab ed       	ldi	r26, 0xDB	; 219
     368:	b0 e0       	ldi	r27, 0x00	; 0
     36a:	8c 91       	ld	r24, X
     36c:	8f 77       	andi	r24, 0x7F	; 127
     36e:	8c 93       	st	X, r24

	if (!tx_busy) {
     370:	80 91 1f 01 	lds	r24, 0x011F
     374:	81 11       	cpse	r24, r1
     376:	27 c0       	rjmp	.+78     	; 0x3c6 <can_send_message+0x66>
		// Switch to Mob 0 access
		CANPAGE = 0 << 4;
     378:	10 92 ed 00 	sts	0x00ED, r1

		// Set ID
		CANIDT2 = message->id << 5;
     37c:	80 81       	ld	r24, Z
     37e:	82 95       	swap	r24
     380:	88 0f       	add	r24, r24
     382:	80 7e       	andi	r24, 0xE0	; 224
     384:	80 93 f2 00 	sts	0x00F2, r24
		CANIDT1 = message->id >> 3;
     388:	80 81       	ld	r24, Z
     38a:	91 81       	ldd	r25, Z+1	; 0x01
     38c:	96 95       	lsr	r25
     38e:	87 95       	ror	r24
     390:	96 95       	lsr	r25
     392:	87 95       	ror	r24
     394:	96 95       	lsr	r25
     396:	87 95       	ror	r24
     398:	80 93 f3 00 	sts	0x00F3, r24
     39c:	df 01       	movw	r26, r30
     39e:	13 96       	adiw	r26, 0x03	; 3
     3a0:	9f 01       	movw	r18, r30
     3a2:	25 5f       	subi	r18, 0xF5	; 245
     3a4:	3f 4f       	sbci	r19, 0xFF	; 255

		// Program data registers - auto increment
		for (int i = 0; i < 8; i++) {
			CANMSG = message->data[i];
     3a6:	ca ef       	ldi	r28, 0xFA	; 250
     3a8:	d0 e0       	ldi	r29, 0x00	; 0
     3aa:	9d 91       	ld	r25, X+
     3ac:	98 83       	st	Y, r25
		// Set ID
		CANIDT2 = message->id << 5;
		CANIDT1 = message->id >> 3;

		// Program data registers - auto increment
		for (int i = 0; i < 8; i++) {
     3ae:	a2 17       	cp	r26, r18
     3b0:	b3 07       	cpc	r27, r19
     3b2:	d9 f7       	brne	.-10     	; 0x3aa <can_send_message+0x4a>
			CANMSG = message->data[i];
		}
		
		result = true;
		tx_busy = 1;
     3b4:	81 e0       	ldi	r24, 0x01	; 1
     3b6:	80 93 1f 01 	sts	0x011F, r24

		// Set length, start send which restarts tx interrupt
		CANCDMOB = (1 << CONMOB0) | message->length;
     3ba:	82 81       	ldd	r24, Z+2	; 0x02
     3bc:	80 64       	ori	r24, 0x40	; 64
     3be:	80 93 ef 00 	sts	0x00EF, r24
		// Program data registers - auto increment
		for (int i = 0; i < 8; i++) {
			CANMSG = message->data[i];
		}
		
		result = true;
     3c2:	81 e0       	ldi	r24, 0x01	; 1
     3c4:	3c c0       	rjmp	.+120    	; 0x43e <can_send_message+0xde>
		tx_busy = 1;

		// Set length, start send which restarts tx interrupt
		CANCDMOB = (1 << CONMOB0) | message->length;
	}
	else if (TX_SIZE - ((tx_on - tx_off) & TX_ABS_MASK)) {
     3c6:	20 91 20 01 	lds	r18, 0x0120
     3ca:	82 2f       	mov	r24, r18
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	30 91 21 01 	lds	r19, 0x0121
     3d2:	83 1b       	sub	r24, r19
     3d4:	91 09       	sbc	r25, r1
     3d6:	8f 77       	andi	r24, 0x7F	; 127
     3d8:	99 27       	eor	r25, r25
     3da:	40 97       	sbiw	r24, 0x10	; 16
     3dc:	79 f1       	breq	.+94     	; 0x43c <can_send_message+0xdc>
		// Copy data into TX buffer
		tx_frames[tx_on & (TX_SIZE-1)].id = message->id;
     3de:	a2 2f       	mov	r26, r18
     3e0:	af 70       	andi	r26, 0x0F	; 15
     3e2:	8b e0       	ldi	r24, 0x0B	; 11
     3e4:	a8 9f       	mul	r26, r24
     3e6:	d0 01       	movw	r26, r0
     3e8:	11 24       	eor	r1, r1
     3ea:	ed 01       	movw	r28, r26
     3ec:	ce 52       	subi	r28, 0x2E	; 46
     3ee:	de 4f       	sbci	r29, 0xFE	; 254
     3f0:	80 81       	ld	r24, Z
     3f2:	38 2f       	mov	r19, r24
     3f4:	32 95       	swap	r19
     3f6:	33 0f       	add	r19, r19
     3f8:	30 7e       	andi	r19, 0xE0	; 224
     3fa:	98 81       	ld	r25, Y
     3fc:	9f 71       	andi	r25, 0x1F	; 31
     3fe:	93 2b       	or	r25, r19
     400:	98 83       	st	Y, r25
     402:	91 81       	ldd	r25, Z+1	; 0x01
     404:	92 95       	swap	r25
     406:	99 0f       	add	r25, r25
     408:	90 7e       	andi	r25, 0xE0	; 224
     40a:	86 95       	lsr	r24
     40c:	86 95       	lsr	r24
     40e:	86 95       	lsr	r24
     410:	89 2b       	or	r24, r25
     412:	89 83       	std	Y+1, r24	; 0x01
		tx_frames[tx_on & (TX_SIZE-1)].length = message->length;
     414:	82 81       	ldd	r24, Z+2	; 0x02
     416:	98 2f       	mov	r25, r24
     418:	9f 70       	andi	r25, 0x0F	; 15
     41a:	8a 81       	ldd	r24, Y+2	; 0x02
     41c:	80 7f       	andi	r24, 0xF0	; 240
     41e:	89 2b       	or	r24, r25
     420:	8a 83       	std	Y+2, r24	; 0x02
		memcpy(tx_frames[tx_on & (TX_SIZE-1)].data, message->data, CAN_FRAME_DATA_MAX_LENGTH);
     422:	ab 52       	subi	r26, 0x2B	; 43
     424:	be 4f       	sbci	r27, 0xFE	; 254
     426:	88 e0       	ldi	r24, 0x08	; 8
     428:	33 96       	adiw	r30, 0x03	; 3
     42a:	01 90       	ld	r0, Z+
     42c:	0d 92       	st	X+, r0
     42e:	8a 95       	dec	r24
     430:	e1 f7       	brne	.-8      	; 0x42a <can_send_message+0xca>

		/*for (int i = 0; i < 8; i++) {
			tx_frames[tx_on & (TX_SIZE-1)].data[i] = message->data[i];
		}*/

		tx_on++;
     432:	2f 5f       	subi	r18, 0xFF	; 255
     434:	20 93 20 01 	sts	0x0120, r18
		result = true;
     438:	81 e0       	ldi	r24, 0x01	; 1
     43a:	01 c0       	rjmp	.+2      	; 0x43e <can_send_message+0xde>

	return true;
}

bool can_send_message(CanMessage_t* message) {
	bool result = false;
     43c:	80 e0       	ldi	r24, 0x00	; 0

		tx_on++;
		result = true;
	}

	CANGIE |= (1 << ENIT);
     43e:	eb ed       	ldi	r30, 0xDB	; 219
     440:	f0 e0       	ldi	r31, 0x00	; 0
     442:	90 81       	ld	r25, Z
     444:	90 68       	ori	r25, 0x80	; 128
     446:	90 83       	st	Z, r25

	return result;
     448:	df 91       	pop	r29
     44a:	cf 91       	pop	r28
     44c:	08 95       	ret

0000044e <timer_init>:
	elapsed_microseconds[timer] = 0;
	timer_enabled[timer] = true;
}

void timer_stop(timer_t timer) {
	timer_enabled[timer] = false;
     44e:	14 bc       	out	0x24, r1	; 36
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	80 93 6e 00 	sts	0x006E, r24
     456:	84 b5       	in	r24, 0x24	; 36
     458:	84 60       	ori	r24, 0x04	; 4
     45a:	84 bd       	out	0x24, r24	; 36
     45c:	08 95       	ret

0000045e <timer_start>:
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	fc 01       	movw	r30, r24
     462:	ee 0f       	add	r30, r30
     464:	ff 1f       	adc	r31, r31
     466:	ee 0f       	add	r30, r30
     468:	ff 1f       	adc	r31, r31
     46a:	ee 57       	subi	r30, 0x7E	; 126
     46c:	fd 4f       	sbci	r31, 0xFD	; 253
     46e:	10 82       	st	Z, r1
     470:	11 82       	std	Z+1, r1	; 0x01
     472:	12 82       	std	Z+2, r1	; 0x02
     474:	13 82       	std	Z+3, r1	; 0x03
     476:	fc 01       	movw	r30, r24
     478:	ee 55       	subi	r30, 0x5E	; 94
     47a:	fd 4f       	sbci	r31, 0xFD	; 253
     47c:	21 e0       	ldi	r18, 0x01	; 1
     47e:	20 83       	st	Z, r18
     480:	08 95       	ret

00000482 <timer_elapsed_ms>:
}

uint16_t timer_elapsed_ms(timer_t timer) {
	return elapsed_microseconds[timer] / 1000;
     482:	24 e0       	ldi	r18, 0x04	; 4
     484:	82 9f       	mul	r24, r18
     486:	c0 01       	movw	r24, r0
     488:	11 24       	eor	r1, r1
     48a:	fc 01       	movw	r30, r24
     48c:	ee 57       	subi	r30, 0x7E	; 126
     48e:	fd 4f       	sbci	r31, 0xFD	; 253
     490:	60 81       	ld	r22, Z
     492:	71 81       	ldd	r23, Z+1	; 0x01
     494:	82 81       	ldd	r24, Z+2	; 0x02
     496:	93 81       	ldd	r25, Z+3	; 0x03
     498:	28 ee       	ldi	r18, 0xE8	; 232
     49a:	33 e0       	ldi	r19, 0x03	; 3
     49c:	40 e0       	ldi	r20, 0x00	; 0
     49e:	50 e0       	ldi	r21, 0x00	; 0
     4a0:	a1 d3       	rcall	.+1858   	; 0xbe4 <__udivmodsi4>
}
     4a2:	c9 01       	movw	r24, r18
     4a4:	08 95       	ret

000004a6 <__vector_17>:

ISR(TIMER0_OVF_vect) {
     4a6:	1f 92       	push	r1
     4a8:	0f 92       	push	r0
     4aa:	0f b6       	in	r0, 0x3f	; 63
     4ac:	0f 92       	push	r0
     4ae:	11 24       	eor	r1, r1
     4b0:	0b b6       	in	r0, 0x3b	; 59
     4b2:	0f 92       	push	r0
     4b4:	2f 93       	push	r18
     4b6:	3f 93       	push	r19
     4b8:	4f 93       	push	r20
     4ba:	5f 93       	push	r21
     4bc:	6f 93       	push	r22
     4be:	7f 93       	push	r23
     4c0:	8f 93       	push	r24
     4c2:	af 93       	push	r26
     4c4:	bf 93       	push	r27
     4c6:	ef 93       	push	r30
     4c8:	ff 93       	push	r31
     4ca:	a2 ea       	ldi	r26, 0xA2	; 162
     4cc:	b2 e0       	ldi	r27, 0x02	; 2
     4ce:	e2 e8       	ldi	r30, 0x82	; 130
     4d0:	f2 e0       	ldi	r31, 0x02	; 2
     4d2:	22 ea       	ldi	r18, 0xA2	; 162
     4d4:	32 e0       	ldi	r19, 0x02	; 2
	for (int t = 0; t < NUMBER_OF_TIMERS; t++) {
		if (timer_enabled[t]){
     4d6:	8d 91       	ld	r24, X+
     4d8:	88 23       	and	r24, r24
     4da:	59 f0       	breq	.+22     	; 0x4f2 <__vector_17+0x4c>
			elapsed_microseconds[t] += (1000000ULL * 256 * 256) / F_CPU;
     4dc:	40 81       	ld	r20, Z
     4de:	51 81       	ldd	r21, Z+1	; 0x01
     4e0:	62 81       	ldd	r22, Z+2	; 0x02
     4e2:	73 81       	ldd	r23, Z+3	; 0x03
     4e4:	50 5e       	subi	r21, 0xE0	; 224
     4e6:	6f 4f       	sbci	r22, 0xFF	; 255
     4e8:	7f 4f       	sbci	r23, 0xFF	; 255
     4ea:	40 83       	st	Z, r20
     4ec:	51 83       	std	Z+1, r21	; 0x01
     4ee:	62 83       	std	Z+2, r22	; 0x02
     4f0:	73 83       	std	Z+3, r23	; 0x03
     4f2:	34 96       	adiw	r30, 0x04	; 4
uint16_t timer_elapsed_ms(timer_t timer) {
	return elapsed_microseconds[timer] / 1000;
}

ISR(TIMER0_OVF_vect) {
	for (int t = 0; t < NUMBER_OF_TIMERS; t++) {
     4f4:	e2 17       	cp	r30, r18
     4f6:	f3 07       	cpc	r31, r19
     4f8:	71 f7       	brne	.-36     	; 0x4d6 <__vector_17+0x30>
		if (timer_enabled[t]){
			elapsed_microseconds[t] += (1000000ULL * 256 * 256) / F_CPU;
		}
	}
}
     4fa:	ff 91       	pop	r31
     4fc:	ef 91       	pop	r30
     4fe:	bf 91       	pop	r27
     500:	af 91       	pop	r26
     502:	8f 91       	pop	r24
     504:	7f 91       	pop	r23
     506:	6f 91       	pop	r22
     508:	5f 91       	pop	r21
     50a:	4f 91       	pop	r20
     50c:	3f 91       	pop	r19
     50e:	2f 91       	pop	r18
     510:	0f 90       	pop	r0
     512:	0b be       	out	0x3b, r0	; 59
     514:	0f 90       	pop	r0
     516:	0f be       	out	0x3f, r0	; 63
     518:	0f 90       	pop	r0
     51a:	1f 90       	pop	r1
     51c:	18 95       	reti

0000051e <usbdbg_tx_char>:
	fdevopen(usbdbg_tx_char, NULL);
}

int usbdbg_tx_char(char c, FILE* stream)
{
	while (!(UCSR0A & (1 << UDRE0))) { }; // Wait until data register is empty
     51e:	e0 ec       	ldi	r30, 0xC0	; 192
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	90 81       	ld	r25, Z
     524:	95 ff       	sbrs	r25, 5
     526:	fd cf       	rjmp	.-6      	; 0x522 <usbdbg_tx_char+0x4>
	UDR0 = c;
     528:	80 93 c6 00 	sts	0x00C6, r24
	return 1;
}
     52c:	81 e0       	ldi	r24, 0x01	; 1
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	08 95       	ret

00000532 <usbdbg_init>:
#include <stdlib.h>

void usbdbg_init()
{
	const uint32_t baud_rate = 19200;
	UBRR0 = (F_CPU / 16) / baud_rate - 1;
     532:	89 e1       	ldi	r24, 0x19	; 25
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	90 93 c5 00 	sts	0x00C5, r25
     53a:	80 93 c4 00 	sts	0x00C4, r24
	UCSR0C = (3 << UCSZ0);	// 8 bit transfer
     53e:	86 e0       	ldi	r24, 0x06	; 6
     540:	80 93 c2 00 	sts	0x00C2, r24
	UCSR0B |= (1 << TXEN0)|(1<<RXEN0)|(1<<RXCIE0); // Enable receive and transmit
     544:	e1 ec       	ldi	r30, 0xC1	; 193
     546:	f0 e0       	ldi	r31, 0x00	; 0
     548:	80 81       	ld	r24, Z
     54a:	88 69       	ori	r24, 0x98	; 152
     54c:	80 83       	st	Z, r24
	
	fdevopen(usbdbg_tx_char, NULL);
     54e:	60 e0       	ldi	r22, 0x00	; 0
     550:	70 e0       	ldi	r23, 0x00	; 0
     552:	8f e8       	ldi	r24, 0x8F	; 143
     554:	92 e0       	ldi	r25, 0x02	; 2
     556:	68 c3       	rjmp	.+1744   	; 0xc28 <fdevopen>
     558:	08 95       	ret

0000055a <pin_init>:

uint16_t calculate_rpm_motors(uint32_t count)
{
	uint32_t output = count*RPM_CONSTANT;
	return output;
}
     55a:	80 b3       	in	r24, 0x10	; 16
     55c:	88 7f       	andi	r24, 0xF8	; 248
     55e:	80 bb       	out	0x10, r24	; 16
     560:	84 b1       	in	r24, 0x04	; 4
     562:	88 7f       	andi	r24, 0xF8	; 248
     564:	84 b9       	out	0x04, r24	; 4
     566:	8b 9a       	sbi	0x11, 3	; 17
     568:	2b 9a       	sbi	0x05, 3	; 5
     56a:	08 95       	ret

0000056c <low_pass_filter>:
     56c:	0f 93       	push	r16
     56e:	1f 93       	push	r17
     570:	fa 01       	movw	r30, r20
     572:	00 81       	ld	r16, Z
     574:	11 81       	ldd	r17, Z+1	; 0x01
     576:	22 81       	ldd	r18, Z+2	; 0x02
     578:	33 81       	ldd	r19, Z+3	; 0x03
     57a:	dc 01       	movw	r26, r24
     57c:	cb 01       	movw	r24, r22
     57e:	80 0f       	add	r24, r16
     580:	91 1f       	adc	r25, r17
     582:	a2 1f       	adc	r26, r18
     584:	b3 1f       	adc	r27, r19
     586:	36 95       	lsr	r19
     588:	27 95       	ror	r18
     58a:	17 95       	ror	r17
     58c:	07 95       	ror	r16
     58e:	36 95       	lsr	r19
     590:	27 95       	ror	r18
     592:	17 95       	ror	r17
     594:	07 95       	ror	r16
     596:	80 1b       	sub	r24, r16
     598:	91 0b       	sbc	r25, r17
     59a:	a2 0b       	sbc	r26, r18
     59c:	b3 0b       	sbc	r27, r19
     59e:	b6 95       	lsr	r27
     5a0:	a7 95       	ror	r26
     5a2:	97 95       	ror	r25
     5a4:	87 95       	ror	r24
     5a6:	b6 95       	lsr	r27
     5a8:	a7 95       	ror	r26
     5aa:	97 95       	ror	r25
     5ac:	87 95       	ror	r24
     5ae:	80 83       	st	Z, r24
     5b0:	91 83       	std	Z+1, r25	; 0x01
     5b2:	a2 83       	std	Z+2, r26	; 0x02
     5b4:	b3 83       	std	Z+3, r27	; 0x03
     5b6:	1f 91       	pop	r17
     5b8:	0f 91       	pop	r16
     5ba:	08 95       	ret

000005bc <calculate_rpm_wheel>:

uint16_t calculate_rpm_wheel(uint32_t count)
{
     5bc:	9b 01       	movw	r18, r22
     5be:	ac 01       	movw	r20, r24
	uint32_t output = 0;
	if (count >= 200)
     5c0:	68 3c       	cpi	r22, 0xC8	; 200
     5c2:	71 05       	cpc	r23, r1
     5c4:	81 05       	cpc	r24, r1
     5c6:	91 05       	cpc	r25, r1
     5c8:	40 f0       	brcs	.+16     	; 0x5da <calculate_rpm_wheel+0x1e>
	{
		output = WHEEL_COUNT_CONSTANT/count;
     5ca:	6e e0       	ldi	r22, 0x0E	; 14
     5cc:	77 e2       	ldi	r23, 0x27	; 39
     5ce:	87 e0       	ldi	r24, 0x07	; 7
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	08 d3       	rcall	.+1552   	; 0xbe4 <__udivmodsi4>
     5d4:	da 01       	movw	r26, r20
     5d6:	c9 01       	movw	r24, r18
     5d8:	08 95       	ret
	} else if (count > WHEEL_COUNT_CONSTANT)
     5da:	2f 30       	cpi	r18, 0x0F	; 15
     5dc:	37 42       	sbci	r19, 0x27	; 39
     5de:	47 40       	sbci	r20, 0x07	; 7
     5e0:	51 05       	cpc	r21, r1
     5e2:	28 f4       	brcc	.+10     	; 0x5ee <calculate_rpm_wheel+0x32>
	{
		output = 0;
	} else 
	{
		output = 0xFFFF;	
     5e4:	8f ef       	ldi	r24, 0xFF	; 255
     5e6:	9f ef       	ldi	r25, 0xFF	; 255
     5e8:	a0 e0       	ldi	r26, 0x00	; 0
     5ea:	b0 e0       	ldi	r27, 0x00	; 0
     5ec:	08 95       	ret
	if (count >= 200)
	{
		output = WHEEL_COUNT_CONSTANT/count;
	} else if (count > WHEEL_COUNT_CONSTANT)
	{
		output = 0;
     5ee:	80 e0       	ldi	r24, 0x00	; 0
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	dc 01       	movw	r26, r24
	{
		output = 0xFFFF;	
	}
	
	return output;
}
     5f4:	08 95       	ret

000005f6 <timers_conf>:

void timers_conf()
{
	//Enabling Timer 1 with no prescaling and overflow interrupt
	TCCR1B |= (1<<CS10);
     5f6:	e1 e8       	ldi	r30, 0x81	; 129
     5f8:	f0 e0       	ldi	r31, 0x00	; 0
     5fa:	80 81       	ld	r24, Z
     5fc:	81 60       	ori	r24, 0x01	; 1
     5fe:	80 83       	st	Z, r24
	TIMSK1 |= (1<<TOIE1);
     600:	ef e6       	ldi	r30, 0x6F	; 111
     602:	f0 e0       	ldi	r31, 0x00	; 0
     604:	80 81       	ld	r24, Z
     606:	81 60       	ori	r24, 0x01	; 1
     608:	80 83       	st	Z, r24
	//Enabling Timer 3 with no prescaling and overflow interrupt
	TCCR3B |= (1<<CS30);
     60a:	e1 e9       	ldi	r30, 0x91	; 145
     60c:	f0 e0       	ldi	r31, 0x00	; 0
     60e:	80 81       	ld	r24, Z
     610:	81 60       	ori	r24, 0x01	; 1
     612:	80 83       	st	Z, r24
	TIMSK3 |= (1<<TOIE3);
     614:	e1 e7       	ldi	r30, 0x71	; 113
     616:	f0 e0       	ldi	r31, 0x00	; 0
     618:	80 81       	ld	r24, Z
     61a:	81 60       	ori	r24, 0x01	; 1
     61c:	80 83       	st	Z, r24
	//Enabling Timer 2 with 1024 prescaling and overflow interrupt
	TCCR2A |= (1<<CS20)|(1<<CS22);
     61e:	e0 eb       	ldi	r30, 0xB0	; 176
     620:	f0 e0       	ldi	r31, 0x00	; 0
     622:	80 81       	ld	r24, Z
     624:	85 60       	ori	r24, 0x05	; 5
     626:	80 83       	st	Z, r24
	TIMSK2 |= (1<<TOIE2);
     628:	e0 e7       	ldi	r30, 0x70	; 112
     62a:	f0 e0       	ldi	r31, 0x00	; 0
     62c:	80 81       	ld	r24, Z
     62e:	81 60       	ori	r24, 0x01	; 1
     630:	80 83       	st	Z, r24
     632:	08 95       	ret

00000634 <main>:
}

int main(void)
{
	cli();
     634:	f8 94       	cli
	pin_init();
     636:	91 df       	rcall	.-222    	; 0x55a <pin_init>
	usbdbg_init();
     638:	7c df       	rcall	.-264    	; 0x532 <usbdbg_init>
	timer_init();
     63a:	09 df       	rcall	.-494    	; 0x44e <timer_init>
	can_init(0,0);
     63c:	60 e0       	ldi	r22, 0x00	; 0
     63e:	70 e0       	ldi	r23, 0x00	; 0
     640:	80 e0       	ldi	r24, 0x00	; 0
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	37 de       	rcall	.-914    	; 0x2b4 <can_init>
	timer_start(TIMER0);
     646:	80 e0       	ldi	r24, 0x00	; 0
     648:	0a df       	rcall	.-492    	; 0x45e <timer_start>
	timers_conf();
     64a:	d5 df       	rcall	.-86     	; 0x5f6 <timers_conf>
	sei();
     64c:	78 94       	sei
	
	uint8_t state = MEASURE;
    txFrame.id = ENCODER_ID;
     64e:	e1 ed       	ldi	r30, 0xD1	; 209
     650:	f2 e0       	ldi	r31, 0x02	; 2
     652:	85 e0       	ldi	r24, 0x05	; 5
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	91 83       	std	Z+1, r25	; 0x01
     658:	80 83       	st	Z, r24
	txFrame.length = 5;
     65a:	82 83       	std	Z+2, r24	; 0x02
    {
		
		if (timer_elapsed_ms(TIMER0) > 100)
		{
			cli();
			printf("Count: %u \t",m1_counts);
     65c:	0f 2e       	mov	r0, r31
     65e:	f6 e0       	ldi	r31, 0x06	; 6
     660:	ef 2e       	mov	r14, r31
     662:	f1 e0       	ldi	r31, 0x01	; 1
     664:	ff 2e       	mov	r15, r31
     666:	f0 2d       	mov	r31, r0
			m1_rpm = calculate_rpm_motors(m1_counts);
			txFrame.data[0] = m1_rpm >> 8;
     668:	ef 01       	movw	r28, r30
			txFrame.data[1] = m1_rpm;
			printf("RPM: %u\n",m1_rpm);
     66a:	02 e1       	ldi	r16, 0x12	; 18
     66c:	11 e0       	ldi	r17, 0x01	; 1
		}
		
		//Wheel Hall Sensor
		if ((PINB & (1<<WHEEL_PIN)) && !m1_state)
		{
			w_counts = TCNT2;
     66e:	0f 2e       	mov	r0, r31
     670:	f2 eb       	ldi	r31, 0xB2	; 178
     672:	af 2e       	mov	r10, r31
     674:	b1 2c       	mov	r11, r1
     676:	f0 2d       	mov	r31, r0
			TCNT2 = 0;
			low_pass_filter(w_temp_count,&w_counts);
			w_state = 1;
     678:	99 24       	eor	r9, r9
     67a:	93 94       	inc	r9
		}
		
		//Encoder 2
		if ((PINB & (1<<ENCODER_I_2)) && !m1_state)
		{
			m2_temp_count = TCNT3;
     67c:	0f 2e       	mov	r0, r31
     67e:	f4 e9       	ldi	r31, 0x94	; 148
     680:	cf 2e       	mov	r12, r31
     682:	d1 2c       	mov	r13, r1
     684:	f0 2d       	mov	r31, r0
	txFrame.length = 5;
	
	while (1) 
    {
		
		if (timer_elapsed_ms(TIMER0) > 100)
     686:	80 e0       	ldi	r24, 0x00	; 0
     688:	fc de       	rcall	.-520    	; 0x482 <timer_elapsed_ms>
     68a:	85 36       	cpi	r24, 0x65	; 101
     68c:	91 05       	cpc	r25, r1
     68e:	08 f4       	brcc	.+2      	; 0x692 <main+0x5e>
     690:	7b c0       	rjmp	.+246    	; 0x788 <main+0x154>
		{
			cli();
     692:	f8 94       	cli
			printf("Count: %u \t",m1_counts);
     694:	80 91 c1 02 	lds	r24, 0x02C1
     698:	8f 93       	push	r24
     69a:	80 91 c0 02 	lds	r24, 0x02C0
     69e:	8f 93       	push	r24
     6a0:	80 91 bf 02 	lds	r24, 0x02BF
     6a4:	8f 93       	push	r24
     6a6:	80 91 be 02 	lds	r24, 0x02BE
     6aa:	8f 93       	push	r24
     6ac:	ff 92       	push	r15
     6ae:	ef 92       	push	r14
     6b0:	05 d3       	rcall	.+1546   	; 0xcbc <printf>
	 *oldValue = ((*oldValue - (*oldValue >> FILTER_SHIFT) + newValue) >> FILTER_SHIFT);
}

uint16_t calculate_rpm_motors(uint32_t count)
{
	uint32_t output = count*RPM_CONSTANT;
     6b2:	60 91 be 02 	lds	r22, 0x02BE
     6b6:	70 91 bf 02 	lds	r23, 0x02BF
     6ba:	80 91 c0 02 	lds	r24, 0x02C0
     6be:	90 91 c1 02 	lds	r25, 0x02C1
     6c2:	9f d1       	rcall	.+830    	; 0xa02 <__floatunsisf>
     6c4:	2f ef       	ldi	r18, 0xFF	; 255
     6c6:	3f e3       	ldi	r19, 0x3F	; 63
     6c8:	40 e9       	ldi	r20, 0x90	; 144
     6ca:	5f e3       	ldi	r21, 0x3F	; 63
     6cc:	00 d2       	rcall	.+1024   	; 0xace <__mulsf3>
     6ce:	6d d1       	rcall	.+730    	; 0x9aa <__fixunssfsi>
		
		if (timer_elapsed_ms(TIMER0) > 100)
		{
			cli();
			printf("Count: %u \t",m1_counts);
			m1_rpm = calculate_rpm_motors(m1_counts);
     6d0:	dc 01       	movw	r26, r24
     6d2:	cb 01       	movw	r24, r22
     6d4:	aa 27       	eor	r26, r26
     6d6:	bb 27       	eor	r27, r27
     6d8:	80 93 cd 02 	sts	0x02CD, r24
     6dc:	90 93 ce 02 	sts	0x02CE, r25
     6e0:	a0 93 cf 02 	sts	0x02CF, r26
     6e4:	b0 93 d0 02 	sts	0x02D0, r27
			txFrame.data[0] = m1_rpm >> 8;
     6e8:	9b 83       	std	Y+3, r25	; 0x03
			txFrame.data[1] = m1_rpm;
     6ea:	8c 83       	std	Y+4, r24	; 0x04
			printf("RPM: %u\n",m1_rpm);
     6ec:	bf 93       	push	r27
     6ee:	af 93       	push	r26
     6f0:	9f 93       	push	r25
     6f2:	8f 93       	push	r24
     6f4:	1f 93       	push	r17
     6f6:	0f 93       	push	r16
     6f8:	e1 d2       	rcall	.+1474   	; 0xcbc <printf>
			m1_counts = 0;
     6fa:	10 92 be 02 	sts	0x02BE, r1
     6fe:	10 92 bf 02 	sts	0x02BF, r1
     702:	10 92 c0 02 	sts	0x02C0, r1
     706:	10 92 c1 02 	sts	0x02C1, r1
	 *oldValue = ((*oldValue - (*oldValue >> FILTER_SHIFT) + newValue) >> FILTER_SHIFT);
}

uint16_t calculate_rpm_motors(uint32_t count)
{
	uint32_t output = count*RPM_CONSTANT;
     70a:	60 91 ba 02 	lds	r22, 0x02BA
     70e:	70 91 bb 02 	lds	r23, 0x02BB
     712:	80 91 bc 02 	lds	r24, 0x02BC
     716:	90 91 bd 02 	lds	r25, 0x02BD
     71a:	73 d1       	rcall	.+742    	; 0xa02 <__floatunsisf>
     71c:	2f ef       	ldi	r18, 0xFF	; 255
     71e:	3f e3       	ldi	r19, 0x3F	; 63
     720:	40 e9       	ldi	r20, 0x90	; 144
     722:	5f e3       	ldi	r21, 0x3F	; 63
     724:	d4 d1       	rcall	.+936    	; 0xace <__mulsf3>
     726:	41 d1       	rcall	.+642    	; 0x9aa <__fixunssfsi>
			txFrame.data[0] = m1_rpm >> 8;
			txFrame.data[1] = m1_rpm;
			printf("RPM: %u\n",m1_rpm);
			m1_counts = 0;
			
			m2_rpm = calculate_rpm_motors(m2_counts);
     728:	dc 01       	movw	r26, r24
     72a:	cb 01       	movw	r24, r22
     72c:	aa 27       	eor	r26, r26
     72e:	bb 27       	eor	r27, r27
     730:	80 93 c9 02 	sts	0x02C9, r24
     734:	90 93 ca 02 	sts	0x02CA, r25
     738:	a0 93 cb 02 	sts	0x02CB, r26
     73c:	b0 93 cc 02 	sts	0x02CC, r27
			txFrame.data[2] = m2_rpm >> 8;
     740:	9d 83       	std	Y+5, r25	; 0x05
			txFrame.data[3] = m2_rpm;
     742:	8e 83       	std	Y+6, r24	; 0x06
			
			w_rpm = calculate_rpm_wheel(w_counts);
     744:	60 91 b6 02 	lds	r22, 0x02B6
     748:	70 91 b7 02 	lds	r23, 0x02B7
     74c:	80 91 b8 02 	lds	r24, 0x02B8
     750:	90 91 b9 02 	lds	r25, 0x02B9
     754:	33 df       	rcall	.-410    	; 0x5bc <calculate_rpm_wheel>
     756:	ac 01       	movw	r20, r24
     758:	60 e0       	ldi	r22, 0x00	; 0
     75a:	70 e0       	ldi	r23, 0x00	; 0
     75c:	40 93 c5 02 	sts	0x02C5, r20
     760:	50 93 c6 02 	sts	0x02C6, r21
     764:	60 93 c7 02 	sts	0x02C7, r22
     768:	70 93 c8 02 	sts	0x02C8, r23
			txFrame.data[4] = w_rpm;
     76c:	8f 83       	std	Y+7, r24	; 0x07
			
			can_send_message(&txFrame);
     76e:	ce 01       	movw	r24, r28
     770:	f7 dd       	rcall	.-1042   	; 0x360 <can_send_message>
			state = MEASURE;
			timer_start(TIMER0);
     772:	80 e0       	ldi	r24, 0x00	; 0
     774:	74 de       	rcall	.-792    	; 0x45e <timer_start>
			
			sei();
     776:	78 94       	sei
     778:	8d b7       	in	r24, 0x3d	; 61
     77a:	9e b7       	in	r25, 0x3e	; 62
     77c:	0c 96       	adiw	r24, 0x0c	; 12
     77e:	0f b6       	in	r0, 0x3f	; 63
     780:	f8 94       	cli
     782:	9e bf       	out	0x3e, r25	; 62
     784:	0f be       	out	0x3f, r0	; 63
     786:	8d bf       	out	0x3d, r24	; 61
		}
		//Encoder 1
		if (!(PINF&(1<<ENCODER_I_1)) && (m1_state == 0))
     788:	78 99       	sbic	0x0f, 0	; 15
     78a:	1d c0       	rjmp	.+58     	; 0x7c6 <main+0x192>
     78c:	80 91 c4 02 	lds	r24, 0x02C4
     790:	81 11       	cpse	r24, r1
     792:	7a c0       	rjmp	.+244    	; 0x888 <main+0x254>
			{
				m1_counts++;
     794:	80 91 be 02 	lds	r24, 0x02BE
     798:	90 91 bf 02 	lds	r25, 0x02BF
     79c:	a0 91 c0 02 	lds	r26, 0x02C0
     7a0:	b0 91 c1 02 	lds	r27, 0x02C1
     7a4:	01 96       	adiw	r24, 0x01	; 1
     7a6:	a1 1d       	adc	r26, r1
     7a8:	b1 1d       	adc	r27, r1
     7aa:	80 93 be 02 	sts	0x02BE, r24
     7ae:	90 93 bf 02 	sts	0x02BF, r25
     7b2:	a0 93 c0 02 	sts	0x02C0, r26
     7b6:	b0 93 c1 02 	sts	0x02C1, r27
				//low_pass_filter(m1_temp_count,&m1_counts);
				m1_state = 1;
     7ba:	90 92 c4 02 	sts	0x02C4, r9
			{
				m1_state = 0;
		}
		
		//Encoder 2
		if ((PINB & (1<<ENCODER_I_2)) && !m1_state)
     7be:	83 b1       	in	r24, 0x03	; 3
		{
			m2_temp_count = TCNT3;
			TCNT3 = 0;
			low_pass_filter(m2_temp_count,&m2_counts);
			m2_state = 1;
		} else if (!(PINB & (1<<ENCODER_I_1)) && m1_state)
     7c0:	18 9b       	sbis	0x03, 0	; 3
     7c2:	34 c0       	rjmp	.+104    	; 0x82c <main+0x1f8>
     7c4:	35 c0       	rjmp	.+106    	; 0x830 <main+0x1fc>
		if (!(PINF&(1<<ENCODER_I_1)) && (m1_state == 0))
			{
				m1_counts++;
				//low_pass_filter(m1_temp_count,&m1_counts);
				m1_state = 1;
			} else if ((PINF &(1<<ENCODER_I_1)) && m1_state)
     7c6:	78 9b       	sbis	0x0f, 0	; 15
     7c8:	08 c0       	rjmp	.+16     	; 0x7da <main+0x1a6>
     7ca:	80 91 c4 02 	lds	r24, 0x02C4
     7ce:	88 23       	and	r24, r24
     7d0:	09 f4       	brne	.+2      	; 0x7d4 <main+0x1a0>
     7d2:	5d c0       	rjmp	.+186    	; 0x88e <main+0x25a>
			{
				m1_state = 0;
     7d4:	10 92 c4 02 	sts	0x02C4, r1
     7d8:	5a c0       	rjmp	.+180    	; 0x88e <main+0x25a>
		}
		
		//Encoder 2
		if ((PINB & (1<<ENCODER_I_2)) && !m1_state)
     7da:	18 9b       	sbis	0x03, 0	; 3
     7dc:	21 c0       	rjmp	.+66     	; 0x820 <main+0x1ec>
     7de:	80 91 c4 02 	lds	r24, 0x02C4
     7e2:	81 11       	cpse	r24, r1
     7e4:	57 c0       	rjmp	.+174    	; 0x894 <main+0x260>
		{
			m2_temp_count = TCNT3;
     7e6:	f6 01       	movw	r30, r12
     7e8:	80 81       	ld	r24, Z
     7ea:	91 81       	ldd	r25, Z+1	; 0x01
     7ec:	a0 e0       	ldi	r26, 0x00	; 0
     7ee:	b0 e0       	ldi	r27, 0x00	; 0
     7f0:	80 93 ae 02 	sts	0x02AE, r24
     7f4:	90 93 af 02 	sts	0x02AF, r25
     7f8:	a0 93 b0 02 	sts	0x02B0, r26
     7fc:	b0 93 b1 02 	sts	0x02B1, r27
			TCNT3 = 0;
     800:	11 82       	std	Z+1, r1	; 0x01
     802:	10 82       	st	Z, r1
			low_pass_filter(m2_temp_count,&m2_counts);
     804:	60 91 ae 02 	lds	r22, 0x02AE
     808:	70 91 af 02 	lds	r23, 0x02AF
     80c:	80 91 b0 02 	lds	r24, 0x02B0
     810:	90 91 b1 02 	lds	r25, 0x02B1
     814:	4a eb       	ldi	r20, 0xBA	; 186
     816:	52 e0       	ldi	r21, 0x02	; 2
     818:	a9 de       	rcall	.-686    	; 0x56c <low_pass_filter>
			m2_state = 1;
     81a:	90 92 c3 02 	sts	0x02C3, r9
     81e:	08 c0       	rjmp	.+16     	; 0x830 <main+0x1fc>
		} else if (!(PINB & (1<<ENCODER_I_1)) && m1_state)
     820:	18 99       	sbic	0x03, 0	; 3
     822:	06 c0       	rjmp	.+12     	; 0x830 <main+0x1fc>
     824:	80 91 c4 02 	lds	r24, 0x02C4
     828:	88 23       	and	r24, r24
     82a:	b9 f1       	breq	.+110    	; 0x89a <main+0x266>
		{
			m2_state = 0;
     82c:	10 92 c3 02 	sts	0x02C3, r1
		}
		
		//Wheel Hall Sensor
		if ((PINB & (1<<WHEEL_PIN)) && !m1_state)
     830:	1c 9b       	sbis	0x03, 4	; 3
     832:	20 c0       	rjmp	.+64     	; 0x874 <main+0x240>
     834:	80 91 c4 02 	lds	r24, 0x02C4
     838:	81 11       	cpse	r24, r1
     83a:	32 c0       	rjmp	.+100    	; 0x8a0 <main+0x26c>
		{
			w_counts = TCNT2;
     83c:	f5 01       	movw	r30, r10
     83e:	80 81       	ld	r24, Z
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	a0 e0       	ldi	r26, 0x00	; 0
     844:	b0 e0       	ldi	r27, 0x00	; 0
     846:	80 93 b6 02 	sts	0x02B6, r24
     84a:	90 93 b7 02 	sts	0x02B7, r25
     84e:	a0 93 b8 02 	sts	0x02B8, r26
     852:	b0 93 b9 02 	sts	0x02B9, r27
			TCNT2 = 0;
     856:	10 82       	st	Z, r1
			low_pass_filter(w_temp_count,&w_counts);
     858:	60 91 aa 02 	lds	r22, 0x02AA
     85c:	70 91 ab 02 	lds	r23, 0x02AB
     860:	80 91 ac 02 	lds	r24, 0x02AC
     864:	90 91 ad 02 	lds	r25, 0x02AD
     868:	46 eb       	ldi	r20, 0xB6	; 182
     86a:	52 e0       	ldi	r21, 0x02	; 2
     86c:	7f de       	rcall	.-770    	; 0x56c <low_pass_filter>
			w_state = 1;
     86e:	90 92 c2 02 	sts	0x02C2, r9
     872:	09 cf       	rjmp	.-494    	; 0x686 <main+0x52>
		} else if (!(PINB & (1<<WHEEL_PIN)) && m1_state)
     874:	1c 99       	sbic	0x03, 4	; 3
     876:	07 cf       	rjmp	.-498    	; 0x686 <main+0x52>
     878:	80 91 c4 02 	lds	r24, 0x02C4
     87c:	88 23       	and	r24, r24
     87e:	09 f4       	brne	.+2      	; 0x882 <main+0x24e>
     880:	02 cf       	rjmp	.-508    	; 0x686 <main+0x52>
		{
			w_state = 0;
     882:	10 92 c2 02 	sts	0x02C2, r1
     886:	ff ce       	rjmp	.-514    	; 0x686 <main+0x52>
		if (!(PINF&(1<<ENCODER_I_1)) && (m1_state == 0))
			{
				m1_counts++;
				//low_pass_filter(m1_temp_count,&m1_counts);
				m1_state = 1;
			} else if ((PINF &(1<<ENCODER_I_1)) && m1_state)
     888:	78 99       	sbic	0x0f, 0	; 15
     88a:	a4 cf       	rjmp	.-184    	; 0x7d4 <main+0x1a0>
     88c:	0c c0       	rjmp	.+24     	; 0x8a6 <main+0x272>
			{
				m1_state = 0;
		}
		
		//Encoder 2
		if ((PINB & (1<<ENCODER_I_2)) && !m1_state)
     88e:	18 99       	sbic	0x03, 0	; 3
     890:	aa cf       	rjmp	.-172    	; 0x7e6 <main+0x1b2>
     892:	c6 cf       	rjmp	.-116    	; 0x820 <main+0x1ec>
		{
			m2_temp_count = TCNT3;
			TCNT3 = 0;
			low_pass_filter(m2_temp_count,&m2_counts);
			m2_state = 1;
		} else if (!(PINB & (1<<ENCODER_I_1)) && m1_state)
     894:	18 9b       	sbis	0x03, 0	; 3
     896:	ca cf       	rjmp	.-108    	; 0x82c <main+0x1f8>
     898:	09 c0       	rjmp	.+18     	; 0x8ac <main+0x278>
		{
			m2_state = 0;
		}
		
		//Wheel Hall Sensor
		if ((PINB & (1<<WHEEL_PIN)) && !m1_state)
     89a:	1c 99       	sbic	0x03, 4	; 3
     89c:	cf cf       	rjmp	.-98     	; 0x83c <main+0x208>
     89e:	09 c0       	rjmp	.+18     	; 0x8b2 <main+0x27e>
		{
			w_counts = TCNT2;
			TCNT2 = 0;
			low_pass_filter(w_temp_count,&w_counts);
			w_state = 1;
		} else if (!(PINB & (1<<WHEEL_PIN)) && m1_state)
     8a0:	1c 9b       	sbis	0x03, 4	; 3
     8a2:	ef cf       	rjmp	.-34     	; 0x882 <main+0x24e>
     8a4:	f0 ce       	rjmp	.-544    	; 0x686 <main+0x52>
			{
				m1_state = 0;
		}
		
		//Encoder 2
		if ((PINB & (1<<ENCODER_I_2)) && !m1_state)
     8a6:	18 99       	sbic	0x03, 0	; 3
     8a8:	f5 cf       	rjmp	.-22     	; 0x894 <main+0x260>
     8aa:	ba cf       	rjmp	.-140    	; 0x820 <main+0x1ec>
		{
			m2_state = 0;
		}
		
		//Wheel Hall Sensor
		if ((PINB & (1<<WHEEL_PIN)) && !m1_state)
     8ac:	1c 99       	sbic	0x03, 4	; 3
     8ae:	f8 cf       	rjmp	.-16     	; 0x8a0 <main+0x26c>
     8b0:	e1 cf       	rjmp	.-62     	; 0x874 <main+0x240>
		{
			w_counts = TCNT2;
			TCNT2 = 0;
			low_pass_filter(w_temp_count,&w_counts);
			w_state = 1;
		} else if (!(PINB & (1<<WHEEL_PIN)) && m1_state)
     8b2:	83 b1       	in	r24, 0x03	; 3
     8b4:	e8 ce       	rjmp	.-560    	; 0x686 <main+0x52>

000008b6 <__vector_15>:
		}
	}
}

ISR(TIMER1_OVF_vect)
{
     8b6:	1f 92       	push	r1
     8b8:	0f 92       	push	r0
     8ba:	0f b6       	in	r0, 0x3f	; 63
     8bc:	0f 92       	push	r0
     8be:	11 24       	eor	r1, r1
     8c0:	8f 93       	push	r24
     8c2:	9f 93       	push	r25
     8c4:	af 93       	push	r26
     8c6:	bf 93       	push	r27
	m1_temp_count += 0xFFFF;
     8c8:	80 91 b2 02 	lds	r24, 0x02B2
     8cc:	90 91 b3 02 	lds	r25, 0x02B3
     8d0:	a0 91 b4 02 	lds	r26, 0x02B4
     8d4:	b0 91 b5 02 	lds	r27, 0x02B5
     8d8:	01 97       	sbiw	r24, 0x01	; 1
     8da:	af 4f       	sbci	r26, 0xFF	; 255
     8dc:	bf 4f       	sbci	r27, 0xFF	; 255
     8de:	80 93 b2 02 	sts	0x02B2, r24
     8e2:	90 93 b3 02 	sts	0x02B3, r25
     8e6:	a0 93 b4 02 	sts	0x02B4, r26
     8ea:	b0 93 b5 02 	sts	0x02B5, r27
	TCNT1 = 0;
     8ee:	10 92 85 00 	sts	0x0085, r1
     8f2:	10 92 84 00 	sts	0x0084, r1
}
     8f6:	bf 91       	pop	r27
     8f8:	af 91       	pop	r26
     8fa:	9f 91       	pop	r25
     8fc:	8f 91       	pop	r24
     8fe:	0f 90       	pop	r0
     900:	0f be       	out	0x3f, r0	; 63
     902:	0f 90       	pop	r0
     904:	1f 90       	pop	r1
     906:	18 95       	reti

00000908 <__vector_10>:

ISR(TIMER2_OVF_vect)
{
     908:	1f 92       	push	r1
     90a:	0f 92       	push	r0
     90c:	0f b6       	in	r0, 0x3f	; 63
     90e:	0f 92       	push	r0
     910:	11 24       	eor	r1, r1
     912:	8f 93       	push	r24
     914:	9f 93       	push	r25
     916:	af 93       	push	r26
     918:	bf 93       	push	r27
	w_temp_count += 0xFF;
     91a:	80 91 aa 02 	lds	r24, 0x02AA
     91e:	90 91 ab 02 	lds	r25, 0x02AB
     922:	a0 91 ac 02 	lds	r26, 0x02AC
     926:	b0 91 ad 02 	lds	r27, 0x02AD
     92a:	81 50       	subi	r24, 0x01	; 1
     92c:	9f 4f       	sbci	r25, 0xFF	; 255
     92e:	af 4f       	sbci	r26, 0xFF	; 255
     930:	bf 4f       	sbci	r27, 0xFF	; 255
     932:	80 93 aa 02 	sts	0x02AA, r24
     936:	90 93 ab 02 	sts	0x02AB, r25
     93a:	a0 93 ac 02 	sts	0x02AC, r26
     93e:	b0 93 ad 02 	sts	0x02AD, r27
	TCNT2 = 0;
     942:	10 92 b2 00 	sts	0x00B2, r1
}
     946:	bf 91       	pop	r27
     948:	af 91       	pop	r26
     94a:	9f 91       	pop	r25
     94c:	8f 91       	pop	r24
     94e:	0f 90       	pop	r0
     950:	0f be       	out	0x3f, r0	; 63
     952:	0f 90       	pop	r0
     954:	1f 90       	pop	r1
     956:	18 95       	reti

00000958 <__vector_31>:

ISR(TIMER3_OVF_vect)
{
     958:	1f 92       	push	r1
     95a:	0f 92       	push	r0
     95c:	0f b6       	in	r0, 0x3f	; 63
     95e:	0f 92       	push	r0
     960:	11 24       	eor	r1, r1
     962:	8f 93       	push	r24
     964:	9f 93       	push	r25
     966:	af 93       	push	r26
     968:	bf 93       	push	r27
	m2_temp_count += 0xFFFF;
     96a:	80 91 ae 02 	lds	r24, 0x02AE
     96e:	90 91 af 02 	lds	r25, 0x02AF
     972:	a0 91 b0 02 	lds	r26, 0x02B0
     976:	b0 91 b1 02 	lds	r27, 0x02B1
     97a:	01 97       	sbiw	r24, 0x01	; 1
     97c:	af 4f       	sbci	r26, 0xFF	; 255
     97e:	bf 4f       	sbci	r27, 0xFF	; 255
     980:	80 93 ae 02 	sts	0x02AE, r24
     984:	90 93 af 02 	sts	0x02AF, r25
     988:	a0 93 b0 02 	sts	0x02B0, r26
     98c:	b0 93 b1 02 	sts	0x02B1, r27
	TCNT3 = 0;
     990:	10 92 95 00 	sts	0x0095, r1
     994:	10 92 94 00 	sts	0x0094, r1
}
     998:	bf 91       	pop	r27
     99a:	af 91       	pop	r26
     99c:	9f 91       	pop	r25
     99e:	8f 91       	pop	r24
     9a0:	0f 90       	pop	r0
     9a2:	0f be       	out	0x3f, r0	; 63
     9a4:	0f 90       	pop	r0
     9a6:	1f 90       	pop	r1
     9a8:	18 95       	reti

000009aa <__fixunssfsi>:
     9aa:	70 d0       	rcall	.+224    	; 0xa8c <__fp_splitA>
     9ac:	88 f0       	brcs	.+34     	; 0x9d0 <__fixunssfsi+0x26>
     9ae:	9f 57       	subi	r25, 0x7F	; 127
     9b0:	90 f0       	brcs	.+36     	; 0x9d6 <__fixunssfsi+0x2c>
     9b2:	b9 2f       	mov	r27, r25
     9b4:	99 27       	eor	r25, r25
     9b6:	b7 51       	subi	r27, 0x17	; 23
     9b8:	a0 f0       	brcs	.+40     	; 0x9e2 <__fixunssfsi+0x38>
     9ba:	d1 f0       	breq	.+52     	; 0x9f0 <__fixunssfsi+0x46>
     9bc:	66 0f       	add	r22, r22
     9be:	77 1f       	adc	r23, r23
     9c0:	88 1f       	adc	r24, r24
     9c2:	99 1f       	adc	r25, r25
     9c4:	1a f0       	brmi	.+6      	; 0x9cc <__fixunssfsi+0x22>
     9c6:	ba 95       	dec	r27
     9c8:	c9 f7       	brne	.-14     	; 0x9bc <__fixunssfsi+0x12>
     9ca:	12 c0       	rjmp	.+36     	; 0x9f0 <__fixunssfsi+0x46>
     9cc:	b1 30       	cpi	r27, 0x01	; 1
     9ce:	81 f0       	breq	.+32     	; 0x9f0 <__fixunssfsi+0x46>
     9d0:	77 d0       	rcall	.+238    	; 0xac0 <__fp_zero>
     9d2:	b1 e0       	ldi	r27, 0x01	; 1
     9d4:	08 95       	ret
     9d6:	74 c0       	rjmp	.+232    	; 0xac0 <__fp_zero>
     9d8:	67 2f       	mov	r22, r23
     9da:	78 2f       	mov	r23, r24
     9dc:	88 27       	eor	r24, r24
     9de:	b8 5f       	subi	r27, 0xF8	; 248
     9e0:	39 f0       	breq	.+14     	; 0x9f0 <__fixunssfsi+0x46>
     9e2:	b9 3f       	cpi	r27, 0xF9	; 249
     9e4:	cc f3       	brlt	.-14     	; 0x9d8 <__fixunssfsi+0x2e>
     9e6:	86 95       	lsr	r24
     9e8:	77 95       	ror	r23
     9ea:	67 95       	ror	r22
     9ec:	b3 95       	inc	r27
     9ee:	d9 f7       	brne	.-10     	; 0x9e6 <__fixunssfsi+0x3c>
     9f0:	3e f4       	brtc	.+14     	; 0xa00 <__fixunssfsi+0x56>
     9f2:	90 95       	com	r25
     9f4:	80 95       	com	r24
     9f6:	70 95       	com	r23
     9f8:	61 95       	neg	r22
     9fa:	7f 4f       	sbci	r23, 0xFF	; 255
     9fc:	8f 4f       	sbci	r24, 0xFF	; 255
     9fe:	9f 4f       	sbci	r25, 0xFF	; 255
     a00:	08 95       	ret

00000a02 <__floatunsisf>:
     a02:	e8 94       	clt
     a04:	09 c0       	rjmp	.+18     	; 0xa18 <__floatsisf+0x12>

00000a06 <__floatsisf>:
     a06:	97 fb       	bst	r25, 7
     a08:	3e f4       	brtc	.+14     	; 0xa18 <__floatsisf+0x12>
     a0a:	90 95       	com	r25
     a0c:	80 95       	com	r24
     a0e:	70 95       	com	r23
     a10:	61 95       	neg	r22
     a12:	7f 4f       	sbci	r23, 0xFF	; 255
     a14:	8f 4f       	sbci	r24, 0xFF	; 255
     a16:	9f 4f       	sbci	r25, 0xFF	; 255
     a18:	99 23       	and	r25, r25
     a1a:	a9 f0       	breq	.+42     	; 0xa46 <__floatsisf+0x40>
     a1c:	f9 2f       	mov	r31, r25
     a1e:	96 e9       	ldi	r25, 0x96	; 150
     a20:	bb 27       	eor	r27, r27
     a22:	93 95       	inc	r25
     a24:	f6 95       	lsr	r31
     a26:	87 95       	ror	r24
     a28:	77 95       	ror	r23
     a2a:	67 95       	ror	r22
     a2c:	b7 95       	ror	r27
     a2e:	f1 11       	cpse	r31, r1
     a30:	f8 cf       	rjmp	.-16     	; 0xa22 <__floatsisf+0x1c>
     a32:	fa f4       	brpl	.+62     	; 0xa72 <__floatsisf+0x6c>
     a34:	bb 0f       	add	r27, r27
     a36:	11 f4       	brne	.+4      	; 0xa3c <__floatsisf+0x36>
     a38:	60 ff       	sbrs	r22, 0
     a3a:	1b c0       	rjmp	.+54     	; 0xa72 <__floatsisf+0x6c>
     a3c:	6f 5f       	subi	r22, 0xFF	; 255
     a3e:	7f 4f       	sbci	r23, 0xFF	; 255
     a40:	8f 4f       	sbci	r24, 0xFF	; 255
     a42:	9f 4f       	sbci	r25, 0xFF	; 255
     a44:	16 c0       	rjmp	.+44     	; 0xa72 <__floatsisf+0x6c>
     a46:	88 23       	and	r24, r24
     a48:	11 f0       	breq	.+4      	; 0xa4e <__floatsisf+0x48>
     a4a:	96 e9       	ldi	r25, 0x96	; 150
     a4c:	11 c0       	rjmp	.+34     	; 0xa70 <__floatsisf+0x6a>
     a4e:	77 23       	and	r23, r23
     a50:	21 f0       	breq	.+8      	; 0xa5a <__floatsisf+0x54>
     a52:	9e e8       	ldi	r25, 0x8E	; 142
     a54:	87 2f       	mov	r24, r23
     a56:	76 2f       	mov	r23, r22
     a58:	05 c0       	rjmp	.+10     	; 0xa64 <__floatsisf+0x5e>
     a5a:	66 23       	and	r22, r22
     a5c:	71 f0       	breq	.+28     	; 0xa7a <__floatsisf+0x74>
     a5e:	96 e8       	ldi	r25, 0x86	; 134
     a60:	86 2f       	mov	r24, r22
     a62:	70 e0       	ldi	r23, 0x00	; 0
     a64:	60 e0       	ldi	r22, 0x00	; 0
     a66:	2a f0       	brmi	.+10     	; 0xa72 <__floatsisf+0x6c>
     a68:	9a 95       	dec	r25
     a6a:	66 0f       	add	r22, r22
     a6c:	77 1f       	adc	r23, r23
     a6e:	88 1f       	adc	r24, r24
     a70:	da f7       	brpl	.-10     	; 0xa68 <__floatsisf+0x62>
     a72:	88 0f       	add	r24, r24
     a74:	96 95       	lsr	r25
     a76:	87 95       	ror	r24
     a78:	97 f9       	bld	r25, 7
     a7a:	08 95       	ret

00000a7c <__fp_split3>:
     a7c:	57 fd       	sbrc	r21, 7
     a7e:	90 58       	subi	r25, 0x80	; 128
     a80:	44 0f       	add	r20, r20
     a82:	55 1f       	adc	r21, r21
     a84:	59 f0       	breq	.+22     	; 0xa9c <__fp_splitA+0x10>
     a86:	5f 3f       	cpi	r21, 0xFF	; 255
     a88:	71 f0       	breq	.+28     	; 0xaa6 <__fp_splitA+0x1a>
     a8a:	47 95       	ror	r20

00000a8c <__fp_splitA>:
     a8c:	88 0f       	add	r24, r24
     a8e:	97 fb       	bst	r25, 7
     a90:	99 1f       	adc	r25, r25
     a92:	61 f0       	breq	.+24     	; 0xaac <__fp_splitA+0x20>
     a94:	9f 3f       	cpi	r25, 0xFF	; 255
     a96:	79 f0       	breq	.+30     	; 0xab6 <__fp_splitA+0x2a>
     a98:	87 95       	ror	r24
     a9a:	08 95       	ret
     a9c:	12 16       	cp	r1, r18
     a9e:	13 06       	cpc	r1, r19
     aa0:	14 06       	cpc	r1, r20
     aa2:	55 1f       	adc	r21, r21
     aa4:	f2 cf       	rjmp	.-28     	; 0xa8a <__fp_split3+0xe>
     aa6:	46 95       	lsr	r20
     aa8:	f1 df       	rcall	.-30     	; 0xa8c <__fp_splitA>
     aaa:	08 c0       	rjmp	.+16     	; 0xabc <__fp_splitA+0x30>
     aac:	16 16       	cp	r1, r22
     aae:	17 06       	cpc	r1, r23
     ab0:	18 06       	cpc	r1, r24
     ab2:	99 1f       	adc	r25, r25
     ab4:	f1 cf       	rjmp	.-30     	; 0xa98 <__fp_splitA+0xc>
     ab6:	86 95       	lsr	r24
     ab8:	71 05       	cpc	r23, r1
     aba:	61 05       	cpc	r22, r1
     abc:	08 94       	sec
     abe:	08 95       	ret

00000ac0 <__fp_zero>:
     ac0:	e8 94       	clt

00000ac2 <__fp_szero>:
     ac2:	bb 27       	eor	r27, r27
     ac4:	66 27       	eor	r22, r22
     ac6:	77 27       	eor	r23, r23
     ac8:	cb 01       	movw	r24, r22
     aca:	97 f9       	bld	r25, 7
     acc:	08 95       	ret

00000ace <__mulsf3>:
     ace:	0b d0       	rcall	.+22     	; 0xae6 <__mulsf3x>
     ad0:	78 c0       	rjmp	.+240    	; 0xbc2 <__fp_round>
     ad2:	69 d0       	rcall	.+210    	; 0xba6 <__fp_pscA>
     ad4:	28 f0       	brcs	.+10     	; 0xae0 <__mulsf3+0x12>
     ad6:	6e d0       	rcall	.+220    	; 0xbb4 <__fp_pscB>
     ad8:	18 f0       	brcs	.+6      	; 0xae0 <__mulsf3+0x12>
     ada:	95 23       	and	r25, r21
     adc:	09 f0       	breq	.+2      	; 0xae0 <__mulsf3+0x12>
     ade:	5a c0       	rjmp	.+180    	; 0xb94 <__fp_inf>
     ae0:	5f c0       	rjmp	.+190    	; 0xba0 <__fp_nan>
     ae2:	11 24       	eor	r1, r1
     ae4:	ee cf       	rjmp	.-36     	; 0xac2 <__fp_szero>

00000ae6 <__mulsf3x>:
     ae6:	ca df       	rcall	.-108    	; 0xa7c <__fp_split3>
     ae8:	a0 f3       	brcs	.-24     	; 0xad2 <__mulsf3+0x4>

00000aea <__mulsf3_pse>:
     aea:	95 9f       	mul	r25, r21
     aec:	d1 f3       	breq	.-12     	; 0xae2 <__mulsf3+0x14>
     aee:	95 0f       	add	r25, r21
     af0:	50 e0       	ldi	r21, 0x00	; 0
     af2:	55 1f       	adc	r21, r21
     af4:	62 9f       	mul	r22, r18
     af6:	f0 01       	movw	r30, r0
     af8:	72 9f       	mul	r23, r18
     afa:	bb 27       	eor	r27, r27
     afc:	f0 0d       	add	r31, r0
     afe:	b1 1d       	adc	r27, r1
     b00:	63 9f       	mul	r22, r19
     b02:	aa 27       	eor	r26, r26
     b04:	f0 0d       	add	r31, r0
     b06:	b1 1d       	adc	r27, r1
     b08:	aa 1f       	adc	r26, r26
     b0a:	64 9f       	mul	r22, r20
     b0c:	66 27       	eor	r22, r22
     b0e:	b0 0d       	add	r27, r0
     b10:	a1 1d       	adc	r26, r1
     b12:	66 1f       	adc	r22, r22
     b14:	82 9f       	mul	r24, r18
     b16:	22 27       	eor	r18, r18
     b18:	b0 0d       	add	r27, r0
     b1a:	a1 1d       	adc	r26, r1
     b1c:	62 1f       	adc	r22, r18
     b1e:	73 9f       	mul	r23, r19
     b20:	b0 0d       	add	r27, r0
     b22:	a1 1d       	adc	r26, r1
     b24:	62 1f       	adc	r22, r18
     b26:	83 9f       	mul	r24, r19
     b28:	a0 0d       	add	r26, r0
     b2a:	61 1d       	adc	r22, r1
     b2c:	22 1f       	adc	r18, r18
     b2e:	74 9f       	mul	r23, r20
     b30:	33 27       	eor	r19, r19
     b32:	a0 0d       	add	r26, r0
     b34:	61 1d       	adc	r22, r1
     b36:	23 1f       	adc	r18, r19
     b38:	84 9f       	mul	r24, r20
     b3a:	60 0d       	add	r22, r0
     b3c:	21 1d       	adc	r18, r1
     b3e:	82 2f       	mov	r24, r18
     b40:	76 2f       	mov	r23, r22
     b42:	6a 2f       	mov	r22, r26
     b44:	11 24       	eor	r1, r1
     b46:	9f 57       	subi	r25, 0x7F	; 127
     b48:	50 40       	sbci	r21, 0x00	; 0
     b4a:	8a f0       	brmi	.+34     	; 0xb6e <__mulsf3_pse+0x84>
     b4c:	e1 f0       	breq	.+56     	; 0xb86 <__mulsf3_pse+0x9c>
     b4e:	88 23       	and	r24, r24
     b50:	4a f0       	brmi	.+18     	; 0xb64 <__mulsf3_pse+0x7a>
     b52:	ee 0f       	add	r30, r30
     b54:	ff 1f       	adc	r31, r31
     b56:	bb 1f       	adc	r27, r27
     b58:	66 1f       	adc	r22, r22
     b5a:	77 1f       	adc	r23, r23
     b5c:	88 1f       	adc	r24, r24
     b5e:	91 50       	subi	r25, 0x01	; 1
     b60:	50 40       	sbci	r21, 0x00	; 0
     b62:	a9 f7       	brne	.-22     	; 0xb4e <__mulsf3_pse+0x64>
     b64:	9e 3f       	cpi	r25, 0xFE	; 254
     b66:	51 05       	cpc	r21, r1
     b68:	70 f0       	brcs	.+28     	; 0xb86 <__mulsf3_pse+0x9c>
     b6a:	14 c0       	rjmp	.+40     	; 0xb94 <__fp_inf>
     b6c:	aa cf       	rjmp	.-172    	; 0xac2 <__fp_szero>
     b6e:	5f 3f       	cpi	r21, 0xFF	; 255
     b70:	ec f3       	brlt	.-6      	; 0xb6c <__mulsf3_pse+0x82>
     b72:	98 3e       	cpi	r25, 0xE8	; 232
     b74:	dc f3       	brlt	.-10     	; 0xb6c <__mulsf3_pse+0x82>
     b76:	86 95       	lsr	r24
     b78:	77 95       	ror	r23
     b7a:	67 95       	ror	r22
     b7c:	b7 95       	ror	r27
     b7e:	f7 95       	ror	r31
     b80:	e7 95       	ror	r30
     b82:	9f 5f       	subi	r25, 0xFF	; 255
     b84:	c1 f7       	brne	.-16     	; 0xb76 <__mulsf3_pse+0x8c>
     b86:	fe 2b       	or	r31, r30
     b88:	88 0f       	add	r24, r24
     b8a:	91 1d       	adc	r25, r1
     b8c:	96 95       	lsr	r25
     b8e:	87 95       	ror	r24
     b90:	97 f9       	bld	r25, 7
     b92:	08 95       	ret

00000b94 <__fp_inf>:
     b94:	97 f9       	bld	r25, 7
     b96:	9f 67       	ori	r25, 0x7F	; 127
     b98:	80 e8       	ldi	r24, 0x80	; 128
     b9a:	70 e0       	ldi	r23, 0x00	; 0
     b9c:	60 e0       	ldi	r22, 0x00	; 0
     b9e:	08 95       	ret

00000ba0 <__fp_nan>:
     ba0:	9f ef       	ldi	r25, 0xFF	; 255
     ba2:	80 ec       	ldi	r24, 0xC0	; 192
     ba4:	08 95       	ret

00000ba6 <__fp_pscA>:
     ba6:	00 24       	eor	r0, r0
     ba8:	0a 94       	dec	r0
     baa:	16 16       	cp	r1, r22
     bac:	17 06       	cpc	r1, r23
     bae:	18 06       	cpc	r1, r24
     bb0:	09 06       	cpc	r0, r25
     bb2:	08 95       	ret

00000bb4 <__fp_pscB>:
     bb4:	00 24       	eor	r0, r0
     bb6:	0a 94       	dec	r0
     bb8:	12 16       	cp	r1, r18
     bba:	13 06       	cpc	r1, r19
     bbc:	14 06       	cpc	r1, r20
     bbe:	05 06       	cpc	r0, r21
     bc0:	08 95       	ret

00000bc2 <__fp_round>:
     bc2:	09 2e       	mov	r0, r25
     bc4:	03 94       	inc	r0
     bc6:	00 0c       	add	r0, r0
     bc8:	11 f4       	brne	.+4      	; 0xbce <__fp_round+0xc>
     bca:	88 23       	and	r24, r24
     bcc:	52 f0       	brmi	.+20     	; 0xbe2 <__fp_round+0x20>
     bce:	bb 0f       	add	r27, r27
     bd0:	40 f4       	brcc	.+16     	; 0xbe2 <__fp_round+0x20>
     bd2:	bf 2b       	or	r27, r31
     bd4:	11 f4       	brne	.+4      	; 0xbda <__fp_round+0x18>
     bd6:	60 ff       	sbrs	r22, 0
     bd8:	04 c0       	rjmp	.+8      	; 0xbe2 <__fp_round+0x20>
     bda:	6f 5f       	subi	r22, 0xFF	; 255
     bdc:	7f 4f       	sbci	r23, 0xFF	; 255
     bde:	8f 4f       	sbci	r24, 0xFF	; 255
     be0:	9f 4f       	sbci	r25, 0xFF	; 255
     be2:	08 95       	ret

00000be4 <__udivmodsi4>:
     be4:	a1 e2       	ldi	r26, 0x21	; 33
     be6:	1a 2e       	mov	r1, r26
     be8:	aa 1b       	sub	r26, r26
     bea:	bb 1b       	sub	r27, r27
     bec:	fd 01       	movw	r30, r26
     bee:	0d c0       	rjmp	.+26     	; 0xc0a <__udivmodsi4_ep>

00000bf0 <__udivmodsi4_loop>:
     bf0:	aa 1f       	adc	r26, r26
     bf2:	bb 1f       	adc	r27, r27
     bf4:	ee 1f       	adc	r30, r30
     bf6:	ff 1f       	adc	r31, r31
     bf8:	a2 17       	cp	r26, r18
     bfa:	b3 07       	cpc	r27, r19
     bfc:	e4 07       	cpc	r30, r20
     bfe:	f5 07       	cpc	r31, r21
     c00:	20 f0       	brcs	.+8      	; 0xc0a <__udivmodsi4_ep>
     c02:	a2 1b       	sub	r26, r18
     c04:	b3 0b       	sbc	r27, r19
     c06:	e4 0b       	sbc	r30, r20
     c08:	f5 0b       	sbc	r31, r21

00000c0a <__udivmodsi4_ep>:
     c0a:	66 1f       	adc	r22, r22
     c0c:	77 1f       	adc	r23, r23
     c0e:	88 1f       	adc	r24, r24
     c10:	99 1f       	adc	r25, r25
     c12:	1a 94       	dec	r1
     c14:	69 f7       	brne	.-38     	; 0xbf0 <__udivmodsi4_loop>
     c16:	60 95       	com	r22
     c18:	70 95       	com	r23
     c1a:	80 95       	com	r24
     c1c:	90 95       	com	r25
     c1e:	9b 01       	movw	r18, r22
     c20:	ac 01       	movw	r20, r24
     c22:	bd 01       	movw	r22, r26
     c24:	cf 01       	movw	r24, r30
     c26:	08 95       	ret

00000c28 <fdevopen>:
     c28:	0f 93       	push	r16
     c2a:	1f 93       	push	r17
     c2c:	cf 93       	push	r28
     c2e:	df 93       	push	r29
     c30:	00 97       	sbiw	r24, 0x00	; 0
     c32:	31 f4       	brne	.+12     	; 0xc40 <fdevopen+0x18>
     c34:	61 15       	cp	r22, r1
     c36:	71 05       	cpc	r23, r1
     c38:	19 f4       	brne	.+6      	; 0xc40 <fdevopen+0x18>
     c3a:	80 e0       	ldi	r24, 0x00	; 0
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	39 c0       	rjmp	.+114    	; 0xcb2 <fdevopen+0x8a>
     c40:	8b 01       	movw	r16, r22
     c42:	ec 01       	movw	r28, r24
     c44:	6e e0       	ldi	r22, 0x0E	; 14
     c46:	70 e0       	ldi	r23, 0x00	; 0
     c48:	81 e0       	ldi	r24, 0x01	; 1
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	38 d2       	rcall	.+1136   	; 0x10be <calloc>
     c4e:	fc 01       	movw	r30, r24
     c50:	89 2b       	or	r24, r25
     c52:	99 f3       	breq	.-26     	; 0xc3a <fdevopen+0x12>
     c54:	80 e8       	ldi	r24, 0x80	; 128
     c56:	83 83       	std	Z+3, r24	; 0x03
     c58:	01 15       	cp	r16, r1
     c5a:	11 05       	cpc	r17, r1
     c5c:	71 f0       	breq	.+28     	; 0xc7a <fdevopen+0x52>
     c5e:	13 87       	std	Z+11, r17	; 0x0b
     c60:	02 87       	std	Z+10, r16	; 0x0a
     c62:	81 e8       	ldi	r24, 0x81	; 129
     c64:	83 83       	std	Z+3, r24	; 0x03
     c66:	80 91 dc 02 	lds	r24, 0x02DC
     c6a:	90 91 dd 02 	lds	r25, 0x02DD
     c6e:	89 2b       	or	r24, r25
     c70:	21 f4       	brne	.+8      	; 0xc7a <fdevopen+0x52>
     c72:	f0 93 dd 02 	sts	0x02DD, r31
     c76:	e0 93 dc 02 	sts	0x02DC, r30
     c7a:	20 97       	sbiw	r28, 0x00	; 0
     c7c:	c9 f0       	breq	.+50     	; 0xcb0 <fdevopen+0x88>
     c7e:	d1 87       	std	Z+9, r29	; 0x09
     c80:	c0 87       	std	Z+8, r28	; 0x08
     c82:	83 81       	ldd	r24, Z+3	; 0x03
     c84:	82 60       	ori	r24, 0x02	; 2
     c86:	83 83       	std	Z+3, r24	; 0x03
     c88:	80 91 de 02 	lds	r24, 0x02DE
     c8c:	90 91 df 02 	lds	r25, 0x02DF
     c90:	89 2b       	or	r24, r25
     c92:	71 f4       	brne	.+28     	; 0xcb0 <fdevopen+0x88>
     c94:	f0 93 df 02 	sts	0x02DF, r31
     c98:	e0 93 de 02 	sts	0x02DE, r30
     c9c:	80 91 e0 02 	lds	r24, 0x02E0
     ca0:	90 91 e1 02 	lds	r25, 0x02E1
     ca4:	89 2b       	or	r24, r25
     ca6:	21 f4       	brne	.+8      	; 0xcb0 <fdevopen+0x88>
     ca8:	f0 93 e1 02 	sts	0x02E1, r31
     cac:	e0 93 e0 02 	sts	0x02E0, r30
     cb0:	cf 01       	movw	r24, r30
     cb2:	df 91       	pop	r29
     cb4:	cf 91       	pop	r28
     cb6:	1f 91       	pop	r17
     cb8:	0f 91       	pop	r16
     cba:	08 95       	ret

00000cbc <printf>:
     cbc:	cf 93       	push	r28
     cbe:	df 93       	push	r29
     cc0:	cd b7       	in	r28, 0x3d	; 61
     cc2:	de b7       	in	r29, 0x3e	; 62
     cc4:	ae 01       	movw	r20, r28
     cc6:	4b 5f       	subi	r20, 0xFB	; 251
     cc8:	5f 4f       	sbci	r21, 0xFF	; 255
     cca:	fa 01       	movw	r30, r20
     ccc:	61 91       	ld	r22, Z+
     cce:	71 91       	ld	r23, Z+
     cd0:	af 01       	movw	r20, r30
     cd2:	80 91 de 02 	lds	r24, 0x02DE
     cd6:	90 91 df 02 	lds	r25, 0x02DF
     cda:	03 d0       	rcall	.+6      	; 0xce2 <vfprintf>
     cdc:	df 91       	pop	r29
     cde:	cf 91       	pop	r28
     ce0:	08 95       	ret

00000ce2 <vfprintf>:
     ce2:	2f 92       	push	r2
     ce4:	3f 92       	push	r3
     ce6:	4f 92       	push	r4
     ce8:	5f 92       	push	r5
     cea:	6f 92       	push	r6
     cec:	7f 92       	push	r7
     cee:	8f 92       	push	r8
     cf0:	9f 92       	push	r9
     cf2:	af 92       	push	r10
     cf4:	bf 92       	push	r11
     cf6:	cf 92       	push	r12
     cf8:	df 92       	push	r13
     cfa:	ef 92       	push	r14
     cfc:	ff 92       	push	r15
     cfe:	0f 93       	push	r16
     d00:	1f 93       	push	r17
     d02:	cf 93       	push	r28
     d04:	df 93       	push	r29
     d06:	cd b7       	in	r28, 0x3d	; 61
     d08:	de b7       	in	r29, 0x3e	; 62
     d0a:	2c 97       	sbiw	r28, 0x0c	; 12
     d0c:	0f b6       	in	r0, 0x3f	; 63
     d0e:	f8 94       	cli
     d10:	de bf       	out	0x3e, r29	; 62
     d12:	0f be       	out	0x3f, r0	; 63
     d14:	cd bf       	out	0x3d, r28	; 61
     d16:	7c 01       	movw	r14, r24
     d18:	6b 01       	movw	r12, r22
     d1a:	8a 01       	movw	r16, r20
     d1c:	fc 01       	movw	r30, r24
     d1e:	17 82       	std	Z+7, r1	; 0x07
     d20:	16 82       	std	Z+6, r1	; 0x06
     d22:	83 81       	ldd	r24, Z+3	; 0x03
     d24:	81 ff       	sbrs	r24, 1
     d26:	b0 c1       	rjmp	.+864    	; 0x1088 <vfprintf+0x3a6>
     d28:	ce 01       	movw	r24, r28
     d2a:	01 96       	adiw	r24, 0x01	; 1
     d2c:	4c 01       	movw	r8, r24
     d2e:	f7 01       	movw	r30, r14
     d30:	93 81       	ldd	r25, Z+3	; 0x03
     d32:	f6 01       	movw	r30, r12
     d34:	93 fd       	sbrc	r25, 3
     d36:	85 91       	lpm	r24, Z+
     d38:	93 ff       	sbrs	r25, 3
     d3a:	81 91       	ld	r24, Z+
     d3c:	6f 01       	movw	r12, r30
     d3e:	88 23       	and	r24, r24
     d40:	09 f4       	brne	.+2      	; 0xd44 <vfprintf+0x62>
     d42:	9e c1       	rjmp	.+828    	; 0x1080 <vfprintf+0x39e>
     d44:	85 32       	cpi	r24, 0x25	; 37
     d46:	39 f4       	brne	.+14     	; 0xd56 <vfprintf+0x74>
     d48:	93 fd       	sbrc	r25, 3
     d4a:	85 91       	lpm	r24, Z+
     d4c:	93 ff       	sbrs	r25, 3
     d4e:	81 91       	ld	r24, Z+
     d50:	6f 01       	movw	r12, r30
     d52:	85 32       	cpi	r24, 0x25	; 37
     d54:	21 f4       	brne	.+8      	; 0xd5e <vfprintf+0x7c>
     d56:	b7 01       	movw	r22, r14
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	15 d3       	rcall	.+1578   	; 0x1386 <fputc>
     d5c:	e8 cf       	rjmp	.-48     	; 0xd2e <vfprintf+0x4c>
     d5e:	51 2c       	mov	r5, r1
     d60:	31 2c       	mov	r3, r1
     d62:	20 e0       	ldi	r18, 0x00	; 0
     d64:	20 32       	cpi	r18, 0x20	; 32
     d66:	a0 f4       	brcc	.+40     	; 0xd90 <vfprintf+0xae>
     d68:	8b 32       	cpi	r24, 0x2B	; 43
     d6a:	69 f0       	breq	.+26     	; 0xd86 <vfprintf+0xa4>
     d6c:	30 f4       	brcc	.+12     	; 0xd7a <vfprintf+0x98>
     d6e:	80 32       	cpi	r24, 0x20	; 32
     d70:	59 f0       	breq	.+22     	; 0xd88 <vfprintf+0xa6>
     d72:	83 32       	cpi	r24, 0x23	; 35
     d74:	69 f4       	brne	.+26     	; 0xd90 <vfprintf+0xae>
     d76:	20 61       	ori	r18, 0x10	; 16
     d78:	2c c0       	rjmp	.+88     	; 0xdd2 <vfprintf+0xf0>
     d7a:	8d 32       	cpi	r24, 0x2D	; 45
     d7c:	39 f0       	breq	.+14     	; 0xd8c <vfprintf+0xaa>
     d7e:	80 33       	cpi	r24, 0x30	; 48
     d80:	39 f4       	brne	.+14     	; 0xd90 <vfprintf+0xae>
     d82:	21 60       	ori	r18, 0x01	; 1
     d84:	26 c0       	rjmp	.+76     	; 0xdd2 <vfprintf+0xf0>
     d86:	22 60       	ori	r18, 0x02	; 2
     d88:	24 60       	ori	r18, 0x04	; 4
     d8a:	23 c0       	rjmp	.+70     	; 0xdd2 <vfprintf+0xf0>
     d8c:	28 60       	ori	r18, 0x08	; 8
     d8e:	21 c0       	rjmp	.+66     	; 0xdd2 <vfprintf+0xf0>
     d90:	27 fd       	sbrc	r18, 7
     d92:	27 c0       	rjmp	.+78     	; 0xde2 <vfprintf+0x100>
     d94:	30 ed       	ldi	r19, 0xD0	; 208
     d96:	38 0f       	add	r19, r24
     d98:	3a 30       	cpi	r19, 0x0A	; 10
     d9a:	78 f4       	brcc	.+30     	; 0xdba <vfprintf+0xd8>
     d9c:	26 ff       	sbrs	r18, 6
     d9e:	06 c0       	rjmp	.+12     	; 0xdac <vfprintf+0xca>
     da0:	fa e0       	ldi	r31, 0x0A	; 10
     da2:	5f 9e       	mul	r5, r31
     da4:	30 0d       	add	r19, r0
     da6:	11 24       	eor	r1, r1
     da8:	53 2e       	mov	r5, r19
     daa:	13 c0       	rjmp	.+38     	; 0xdd2 <vfprintf+0xf0>
     dac:	8a e0       	ldi	r24, 0x0A	; 10
     dae:	38 9e       	mul	r3, r24
     db0:	30 0d       	add	r19, r0
     db2:	11 24       	eor	r1, r1
     db4:	33 2e       	mov	r3, r19
     db6:	20 62       	ori	r18, 0x20	; 32
     db8:	0c c0       	rjmp	.+24     	; 0xdd2 <vfprintf+0xf0>
     dba:	8e 32       	cpi	r24, 0x2E	; 46
     dbc:	21 f4       	brne	.+8      	; 0xdc6 <vfprintf+0xe4>
     dbe:	26 fd       	sbrc	r18, 6
     dc0:	5f c1       	rjmp	.+702    	; 0x1080 <vfprintf+0x39e>
     dc2:	20 64       	ori	r18, 0x40	; 64
     dc4:	06 c0       	rjmp	.+12     	; 0xdd2 <vfprintf+0xf0>
     dc6:	8c 36       	cpi	r24, 0x6C	; 108
     dc8:	11 f4       	brne	.+4      	; 0xdce <vfprintf+0xec>
     dca:	20 68       	ori	r18, 0x80	; 128
     dcc:	02 c0       	rjmp	.+4      	; 0xdd2 <vfprintf+0xf0>
     dce:	88 36       	cpi	r24, 0x68	; 104
     dd0:	41 f4       	brne	.+16     	; 0xde2 <vfprintf+0x100>
     dd2:	f6 01       	movw	r30, r12
     dd4:	93 fd       	sbrc	r25, 3
     dd6:	85 91       	lpm	r24, Z+
     dd8:	93 ff       	sbrs	r25, 3
     dda:	81 91       	ld	r24, Z+
     ddc:	6f 01       	movw	r12, r30
     dde:	81 11       	cpse	r24, r1
     de0:	c1 cf       	rjmp	.-126    	; 0xd64 <vfprintf+0x82>
     de2:	98 2f       	mov	r25, r24
     de4:	9f 7d       	andi	r25, 0xDF	; 223
     de6:	95 54       	subi	r25, 0x45	; 69
     de8:	93 30       	cpi	r25, 0x03	; 3
     dea:	28 f4       	brcc	.+10     	; 0xdf6 <vfprintf+0x114>
     dec:	0c 5f       	subi	r16, 0xFC	; 252
     dee:	1f 4f       	sbci	r17, 0xFF	; 255
     df0:	ff e3       	ldi	r31, 0x3F	; 63
     df2:	f9 83       	std	Y+1, r31	; 0x01
     df4:	0d c0       	rjmp	.+26     	; 0xe10 <vfprintf+0x12e>
     df6:	83 36       	cpi	r24, 0x63	; 99
     df8:	31 f0       	breq	.+12     	; 0xe06 <vfprintf+0x124>
     dfa:	83 37       	cpi	r24, 0x73	; 115
     dfc:	71 f0       	breq	.+28     	; 0xe1a <vfprintf+0x138>
     dfe:	83 35       	cpi	r24, 0x53	; 83
     e00:	09 f0       	breq	.+2      	; 0xe04 <vfprintf+0x122>
     e02:	57 c0       	rjmp	.+174    	; 0xeb2 <vfprintf+0x1d0>
     e04:	21 c0       	rjmp	.+66     	; 0xe48 <vfprintf+0x166>
     e06:	f8 01       	movw	r30, r16
     e08:	80 81       	ld	r24, Z
     e0a:	89 83       	std	Y+1, r24	; 0x01
     e0c:	0e 5f       	subi	r16, 0xFE	; 254
     e0e:	1f 4f       	sbci	r17, 0xFF	; 255
     e10:	44 24       	eor	r4, r4
     e12:	43 94       	inc	r4
     e14:	51 2c       	mov	r5, r1
     e16:	54 01       	movw	r10, r8
     e18:	14 c0       	rjmp	.+40     	; 0xe42 <vfprintf+0x160>
     e1a:	38 01       	movw	r6, r16
     e1c:	f2 e0       	ldi	r31, 0x02	; 2
     e1e:	6f 0e       	add	r6, r31
     e20:	71 1c       	adc	r7, r1
     e22:	f8 01       	movw	r30, r16
     e24:	a0 80       	ld	r10, Z
     e26:	b1 80       	ldd	r11, Z+1	; 0x01
     e28:	26 ff       	sbrs	r18, 6
     e2a:	03 c0       	rjmp	.+6      	; 0xe32 <vfprintf+0x150>
     e2c:	65 2d       	mov	r22, r5
     e2e:	70 e0       	ldi	r23, 0x00	; 0
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <vfprintf+0x154>
     e32:	6f ef       	ldi	r22, 0xFF	; 255
     e34:	7f ef       	ldi	r23, 0xFF	; 255
     e36:	c5 01       	movw	r24, r10
     e38:	2c 87       	std	Y+12, r18	; 0x0c
     e3a:	9a d2       	rcall	.+1332   	; 0x1370 <strnlen>
     e3c:	2c 01       	movw	r4, r24
     e3e:	83 01       	movw	r16, r6
     e40:	2c 85       	ldd	r18, Y+12	; 0x0c
     e42:	2f 77       	andi	r18, 0x7F	; 127
     e44:	22 2e       	mov	r2, r18
     e46:	16 c0       	rjmp	.+44     	; 0xe74 <vfprintf+0x192>
     e48:	38 01       	movw	r6, r16
     e4a:	f2 e0       	ldi	r31, 0x02	; 2
     e4c:	6f 0e       	add	r6, r31
     e4e:	71 1c       	adc	r7, r1
     e50:	f8 01       	movw	r30, r16
     e52:	a0 80       	ld	r10, Z
     e54:	b1 80       	ldd	r11, Z+1	; 0x01
     e56:	26 ff       	sbrs	r18, 6
     e58:	03 c0       	rjmp	.+6      	; 0xe60 <vfprintf+0x17e>
     e5a:	65 2d       	mov	r22, r5
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	02 c0       	rjmp	.+4      	; 0xe64 <vfprintf+0x182>
     e60:	6f ef       	ldi	r22, 0xFF	; 255
     e62:	7f ef       	ldi	r23, 0xFF	; 255
     e64:	c5 01       	movw	r24, r10
     e66:	2c 87       	std	Y+12, r18	; 0x0c
     e68:	71 d2       	rcall	.+1250   	; 0x134c <strnlen_P>
     e6a:	2c 01       	movw	r4, r24
     e6c:	2c 85       	ldd	r18, Y+12	; 0x0c
     e6e:	20 68       	ori	r18, 0x80	; 128
     e70:	22 2e       	mov	r2, r18
     e72:	83 01       	movw	r16, r6
     e74:	23 fc       	sbrc	r2, 3
     e76:	19 c0       	rjmp	.+50     	; 0xeaa <vfprintf+0x1c8>
     e78:	83 2d       	mov	r24, r3
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	48 16       	cp	r4, r24
     e7e:	59 06       	cpc	r5, r25
     e80:	a0 f4       	brcc	.+40     	; 0xeaa <vfprintf+0x1c8>
     e82:	b7 01       	movw	r22, r14
     e84:	80 e2       	ldi	r24, 0x20	; 32
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	7e d2       	rcall	.+1276   	; 0x1386 <fputc>
     e8a:	3a 94       	dec	r3
     e8c:	f5 cf       	rjmp	.-22     	; 0xe78 <vfprintf+0x196>
     e8e:	f5 01       	movw	r30, r10
     e90:	27 fc       	sbrc	r2, 7
     e92:	85 91       	lpm	r24, Z+
     e94:	27 fe       	sbrs	r2, 7
     e96:	81 91       	ld	r24, Z+
     e98:	5f 01       	movw	r10, r30
     e9a:	b7 01       	movw	r22, r14
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	73 d2       	rcall	.+1254   	; 0x1386 <fputc>
     ea0:	31 10       	cpse	r3, r1
     ea2:	3a 94       	dec	r3
     ea4:	f1 e0       	ldi	r31, 0x01	; 1
     ea6:	4f 1a       	sub	r4, r31
     ea8:	51 08       	sbc	r5, r1
     eaa:	41 14       	cp	r4, r1
     eac:	51 04       	cpc	r5, r1
     eae:	79 f7       	brne	.-34     	; 0xe8e <vfprintf+0x1ac>
     eb0:	de c0       	rjmp	.+444    	; 0x106e <vfprintf+0x38c>
     eb2:	84 36       	cpi	r24, 0x64	; 100
     eb4:	11 f0       	breq	.+4      	; 0xeba <vfprintf+0x1d8>
     eb6:	89 36       	cpi	r24, 0x69	; 105
     eb8:	31 f5       	brne	.+76     	; 0xf06 <vfprintf+0x224>
     eba:	f8 01       	movw	r30, r16
     ebc:	27 ff       	sbrs	r18, 7
     ebe:	07 c0       	rjmp	.+14     	; 0xece <vfprintf+0x1ec>
     ec0:	60 81       	ld	r22, Z
     ec2:	71 81       	ldd	r23, Z+1	; 0x01
     ec4:	82 81       	ldd	r24, Z+2	; 0x02
     ec6:	93 81       	ldd	r25, Z+3	; 0x03
     ec8:	0c 5f       	subi	r16, 0xFC	; 252
     eca:	1f 4f       	sbci	r17, 0xFF	; 255
     ecc:	08 c0       	rjmp	.+16     	; 0xede <vfprintf+0x1fc>
     ece:	60 81       	ld	r22, Z
     ed0:	71 81       	ldd	r23, Z+1	; 0x01
     ed2:	07 2e       	mov	r0, r23
     ed4:	00 0c       	add	r0, r0
     ed6:	88 0b       	sbc	r24, r24
     ed8:	99 0b       	sbc	r25, r25
     eda:	0e 5f       	subi	r16, 0xFE	; 254
     edc:	1f 4f       	sbci	r17, 0xFF	; 255
     ede:	2f 76       	andi	r18, 0x6F	; 111
     ee0:	72 2e       	mov	r7, r18
     ee2:	97 ff       	sbrs	r25, 7
     ee4:	09 c0       	rjmp	.+18     	; 0xef8 <vfprintf+0x216>
     ee6:	90 95       	com	r25
     ee8:	80 95       	com	r24
     eea:	70 95       	com	r23
     eec:	61 95       	neg	r22
     eee:	7f 4f       	sbci	r23, 0xFF	; 255
     ef0:	8f 4f       	sbci	r24, 0xFF	; 255
     ef2:	9f 4f       	sbci	r25, 0xFF	; 255
     ef4:	20 68       	ori	r18, 0x80	; 128
     ef6:	72 2e       	mov	r7, r18
     ef8:	2a e0       	ldi	r18, 0x0A	; 10
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	a4 01       	movw	r20, r8
     efe:	7b d2       	rcall	.+1270   	; 0x13f6 <__ultoa_invert>
     f00:	a8 2e       	mov	r10, r24
     f02:	a8 18       	sub	r10, r8
     f04:	43 c0       	rjmp	.+134    	; 0xf8c <vfprintf+0x2aa>
     f06:	85 37       	cpi	r24, 0x75	; 117
     f08:	29 f4       	brne	.+10     	; 0xf14 <vfprintf+0x232>
     f0a:	2f 7e       	andi	r18, 0xEF	; 239
     f0c:	b2 2e       	mov	r11, r18
     f0e:	2a e0       	ldi	r18, 0x0A	; 10
     f10:	30 e0       	ldi	r19, 0x00	; 0
     f12:	25 c0       	rjmp	.+74     	; 0xf5e <vfprintf+0x27c>
     f14:	f2 2f       	mov	r31, r18
     f16:	f9 7f       	andi	r31, 0xF9	; 249
     f18:	bf 2e       	mov	r11, r31
     f1a:	8f 36       	cpi	r24, 0x6F	; 111
     f1c:	c1 f0       	breq	.+48     	; 0xf4e <vfprintf+0x26c>
     f1e:	18 f4       	brcc	.+6      	; 0xf26 <vfprintf+0x244>
     f20:	88 35       	cpi	r24, 0x58	; 88
     f22:	79 f0       	breq	.+30     	; 0xf42 <vfprintf+0x260>
     f24:	ad c0       	rjmp	.+346    	; 0x1080 <vfprintf+0x39e>
     f26:	80 37       	cpi	r24, 0x70	; 112
     f28:	19 f0       	breq	.+6      	; 0xf30 <vfprintf+0x24e>
     f2a:	88 37       	cpi	r24, 0x78	; 120
     f2c:	21 f0       	breq	.+8      	; 0xf36 <vfprintf+0x254>
     f2e:	a8 c0       	rjmp	.+336    	; 0x1080 <vfprintf+0x39e>
     f30:	2f 2f       	mov	r18, r31
     f32:	20 61       	ori	r18, 0x10	; 16
     f34:	b2 2e       	mov	r11, r18
     f36:	b4 fe       	sbrs	r11, 4
     f38:	0d c0       	rjmp	.+26     	; 0xf54 <vfprintf+0x272>
     f3a:	8b 2d       	mov	r24, r11
     f3c:	84 60       	ori	r24, 0x04	; 4
     f3e:	b8 2e       	mov	r11, r24
     f40:	09 c0       	rjmp	.+18     	; 0xf54 <vfprintf+0x272>
     f42:	24 ff       	sbrs	r18, 4
     f44:	0a c0       	rjmp	.+20     	; 0xf5a <vfprintf+0x278>
     f46:	9f 2f       	mov	r25, r31
     f48:	96 60       	ori	r25, 0x06	; 6
     f4a:	b9 2e       	mov	r11, r25
     f4c:	06 c0       	rjmp	.+12     	; 0xf5a <vfprintf+0x278>
     f4e:	28 e0       	ldi	r18, 0x08	; 8
     f50:	30 e0       	ldi	r19, 0x00	; 0
     f52:	05 c0       	rjmp	.+10     	; 0xf5e <vfprintf+0x27c>
     f54:	20 e1       	ldi	r18, 0x10	; 16
     f56:	30 e0       	ldi	r19, 0x00	; 0
     f58:	02 c0       	rjmp	.+4      	; 0xf5e <vfprintf+0x27c>
     f5a:	20 e1       	ldi	r18, 0x10	; 16
     f5c:	32 e0       	ldi	r19, 0x02	; 2
     f5e:	f8 01       	movw	r30, r16
     f60:	b7 fe       	sbrs	r11, 7
     f62:	07 c0       	rjmp	.+14     	; 0xf72 <vfprintf+0x290>
     f64:	60 81       	ld	r22, Z
     f66:	71 81       	ldd	r23, Z+1	; 0x01
     f68:	82 81       	ldd	r24, Z+2	; 0x02
     f6a:	93 81       	ldd	r25, Z+3	; 0x03
     f6c:	0c 5f       	subi	r16, 0xFC	; 252
     f6e:	1f 4f       	sbci	r17, 0xFF	; 255
     f70:	06 c0       	rjmp	.+12     	; 0xf7e <vfprintf+0x29c>
     f72:	60 81       	ld	r22, Z
     f74:	71 81       	ldd	r23, Z+1	; 0x01
     f76:	80 e0       	ldi	r24, 0x00	; 0
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	0e 5f       	subi	r16, 0xFE	; 254
     f7c:	1f 4f       	sbci	r17, 0xFF	; 255
     f7e:	a4 01       	movw	r20, r8
     f80:	3a d2       	rcall	.+1140   	; 0x13f6 <__ultoa_invert>
     f82:	a8 2e       	mov	r10, r24
     f84:	a8 18       	sub	r10, r8
     f86:	fb 2d       	mov	r31, r11
     f88:	ff 77       	andi	r31, 0x7F	; 127
     f8a:	7f 2e       	mov	r7, r31
     f8c:	76 fe       	sbrs	r7, 6
     f8e:	0b c0       	rjmp	.+22     	; 0xfa6 <vfprintf+0x2c4>
     f90:	37 2d       	mov	r19, r7
     f92:	3e 7f       	andi	r19, 0xFE	; 254
     f94:	a5 14       	cp	r10, r5
     f96:	50 f4       	brcc	.+20     	; 0xfac <vfprintf+0x2ca>
     f98:	74 fe       	sbrs	r7, 4
     f9a:	0a c0       	rjmp	.+20     	; 0xfb0 <vfprintf+0x2ce>
     f9c:	72 fc       	sbrc	r7, 2
     f9e:	08 c0       	rjmp	.+16     	; 0xfb0 <vfprintf+0x2ce>
     fa0:	37 2d       	mov	r19, r7
     fa2:	3e 7e       	andi	r19, 0xEE	; 238
     fa4:	05 c0       	rjmp	.+10     	; 0xfb0 <vfprintf+0x2ce>
     fa6:	ba 2c       	mov	r11, r10
     fa8:	37 2d       	mov	r19, r7
     faa:	03 c0       	rjmp	.+6      	; 0xfb2 <vfprintf+0x2d0>
     fac:	ba 2c       	mov	r11, r10
     fae:	01 c0       	rjmp	.+2      	; 0xfb2 <vfprintf+0x2d0>
     fb0:	b5 2c       	mov	r11, r5
     fb2:	34 ff       	sbrs	r19, 4
     fb4:	0d c0       	rjmp	.+26     	; 0xfd0 <vfprintf+0x2ee>
     fb6:	fe 01       	movw	r30, r28
     fb8:	ea 0d       	add	r30, r10
     fba:	f1 1d       	adc	r31, r1
     fbc:	80 81       	ld	r24, Z
     fbe:	80 33       	cpi	r24, 0x30	; 48
     fc0:	11 f4       	brne	.+4      	; 0xfc6 <vfprintf+0x2e4>
     fc2:	39 7e       	andi	r19, 0xE9	; 233
     fc4:	09 c0       	rjmp	.+18     	; 0xfd8 <vfprintf+0x2f6>
     fc6:	32 ff       	sbrs	r19, 2
     fc8:	06 c0       	rjmp	.+12     	; 0xfd6 <vfprintf+0x2f4>
     fca:	b3 94       	inc	r11
     fcc:	b3 94       	inc	r11
     fce:	04 c0       	rjmp	.+8      	; 0xfd8 <vfprintf+0x2f6>
     fd0:	83 2f       	mov	r24, r19
     fd2:	86 78       	andi	r24, 0x86	; 134
     fd4:	09 f0       	breq	.+2      	; 0xfd8 <vfprintf+0x2f6>
     fd6:	b3 94       	inc	r11
     fd8:	33 fd       	sbrc	r19, 3
     fda:	12 c0       	rjmp	.+36     	; 0x1000 <vfprintf+0x31e>
     fdc:	30 ff       	sbrs	r19, 0
     fde:	06 c0       	rjmp	.+12     	; 0xfec <vfprintf+0x30a>
     fe0:	5a 2c       	mov	r5, r10
     fe2:	b3 14       	cp	r11, r3
     fe4:	18 f4       	brcc	.+6      	; 0xfec <vfprintf+0x30a>
     fe6:	53 0c       	add	r5, r3
     fe8:	5b 18       	sub	r5, r11
     fea:	b3 2c       	mov	r11, r3
     fec:	b3 14       	cp	r11, r3
     fee:	60 f4       	brcc	.+24     	; 0x1008 <vfprintf+0x326>
     ff0:	b7 01       	movw	r22, r14
     ff2:	80 e2       	ldi	r24, 0x20	; 32
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	3c 87       	std	Y+12, r19	; 0x0c
     ff8:	c6 d1       	rcall	.+908    	; 0x1386 <fputc>
     ffa:	b3 94       	inc	r11
     ffc:	3c 85       	ldd	r19, Y+12	; 0x0c
     ffe:	f6 cf       	rjmp	.-20     	; 0xfec <vfprintf+0x30a>
    1000:	b3 14       	cp	r11, r3
    1002:	10 f4       	brcc	.+4      	; 0x1008 <vfprintf+0x326>
    1004:	3b 18       	sub	r3, r11
    1006:	01 c0       	rjmp	.+2      	; 0x100a <vfprintf+0x328>
    1008:	31 2c       	mov	r3, r1
    100a:	34 ff       	sbrs	r19, 4
    100c:	11 c0       	rjmp	.+34     	; 0x1030 <vfprintf+0x34e>
    100e:	b7 01       	movw	r22, r14
    1010:	80 e3       	ldi	r24, 0x30	; 48
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	3c 87       	std	Y+12, r19	; 0x0c
    1016:	b7 d1       	rcall	.+878    	; 0x1386 <fputc>
    1018:	3c 85       	ldd	r19, Y+12	; 0x0c
    101a:	32 ff       	sbrs	r19, 2
    101c:	16 c0       	rjmp	.+44     	; 0x104a <vfprintf+0x368>
    101e:	31 fd       	sbrc	r19, 1
    1020:	03 c0       	rjmp	.+6      	; 0x1028 <vfprintf+0x346>
    1022:	88 e7       	ldi	r24, 0x78	; 120
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	02 c0       	rjmp	.+4      	; 0x102c <vfprintf+0x34a>
    1028:	88 e5       	ldi	r24, 0x58	; 88
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	b7 01       	movw	r22, r14
    102e:	0c c0       	rjmp	.+24     	; 0x1048 <vfprintf+0x366>
    1030:	83 2f       	mov	r24, r19
    1032:	86 78       	andi	r24, 0x86	; 134
    1034:	51 f0       	breq	.+20     	; 0x104a <vfprintf+0x368>
    1036:	31 ff       	sbrs	r19, 1
    1038:	02 c0       	rjmp	.+4      	; 0x103e <vfprintf+0x35c>
    103a:	8b e2       	ldi	r24, 0x2B	; 43
    103c:	01 c0       	rjmp	.+2      	; 0x1040 <vfprintf+0x35e>
    103e:	80 e2       	ldi	r24, 0x20	; 32
    1040:	37 fd       	sbrc	r19, 7
    1042:	8d e2       	ldi	r24, 0x2D	; 45
    1044:	b7 01       	movw	r22, r14
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	9e d1       	rcall	.+828    	; 0x1386 <fputc>
    104a:	a5 14       	cp	r10, r5
    104c:	30 f4       	brcc	.+12     	; 0x105a <vfprintf+0x378>
    104e:	b7 01       	movw	r22, r14
    1050:	80 e3       	ldi	r24, 0x30	; 48
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	98 d1       	rcall	.+816    	; 0x1386 <fputc>
    1056:	5a 94       	dec	r5
    1058:	f8 cf       	rjmp	.-16     	; 0x104a <vfprintf+0x368>
    105a:	aa 94       	dec	r10
    105c:	f4 01       	movw	r30, r8
    105e:	ea 0d       	add	r30, r10
    1060:	f1 1d       	adc	r31, r1
    1062:	80 81       	ld	r24, Z
    1064:	b7 01       	movw	r22, r14
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	8e d1       	rcall	.+796    	; 0x1386 <fputc>
    106a:	a1 10       	cpse	r10, r1
    106c:	f6 cf       	rjmp	.-20     	; 0x105a <vfprintf+0x378>
    106e:	33 20       	and	r3, r3
    1070:	09 f4       	brne	.+2      	; 0x1074 <vfprintf+0x392>
    1072:	5d ce       	rjmp	.-838    	; 0xd2e <vfprintf+0x4c>
    1074:	b7 01       	movw	r22, r14
    1076:	80 e2       	ldi	r24, 0x20	; 32
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	85 d1       	rcall	.+778    	; 0x1386 <fputc>
    107c:	3a 94       	dec	r3
    107e:	f7 cf       	rjmp	.-18     	; 0x106e <vfprintf+0x38c>
    1080:	f7 01       	movw	r30, r14
    1082:	86 81       	ldd	r24, Z+6	; 0x06
    1084:	97 81       	ldd	r25, Z+7	; 0x07
    1086:	02 c0       	rjmp	.+4      	; 0x108c <vfprintf+0x3aa>
    1088:	8f ef       	ldi	r24, 0xFF	; 255
    108a:	9f ef       	ldi	r25, 0xFF	; 255
    108c:	2c 96       	adiw	r28, 0x0c	; 12
    108e:	0f b6       	in	r0, 0x3f	; 63
    1090:	f8 94       	cli
    1092:	de bf       	out	0x3e, r29	; 62
    1094:	0f be       	out	0x3f, r0	; 63
    1096:	cd bf       	out	0x3d, r28	; 61
    1098:	df 91       	pop	r29
    109a:	cf 91       	pop	r28
    109c:	1f 91       	pop	r17
    109e:	0f 91       	pop	r16
    10a0:	ff 90       	pop	r15
    10a2:	ef 90       	pop	r14
    10a4:	df 90       	pop	r13
    10a6:	cf 90       	pop	r12
    10a8:	bf 90       	pop	r11
    10aa:	af 90       	pop	r10
    10ac:	9f 90       	pop	r9
    10ae:	8f 90       	pop	r8
    10b0:	7f 90       	pop	r7
    10b2:	6f 90       	pop	r6
    10b4:	5f 90       	pop	r5
    10b6:	4f 90       	pop	r4
    10b8:	3f 90       	pop	r3
    10ba:	2f 90       	pop	r2
    10bc:	08 95       	ret

000010be <calloc>:
    10be:	0f 93       	push	r16
    10c0:	1f 93       	push	r17
    10c2:	cf 93       	push	r28
    10c4:	df 93       	push	r29
    10c6:	86 9f       	mul	r24, r22
    10c8:	80 01       	movw	r16, r0
    10ca:	87 9f       	mul	r24, r23
    10cc:	10 0d       	add	r17, r0
    10ce:	96 9f       	mul	r25, r22
    10d0:	10 0d       	add	r17, r0
    10d2:	11 24       	eor	r1, r1
    10d4:	c8 01       	movw	r24, r16
    10d6:	0d d0       	rcall	.+26     	; 0x10f2 <malloc>
    10d8:	ec 01       	movw	r28, r24
    10da:	00 97       	sbiw	r24, 0x00	; 0
    10dc:	21 f0       	breq	.+8      	; 0x10e6 <calloc+0x28>
    10de:	a8 01       	movw	r20, r16
    10e0:	60 e0       	ldi	r22, 0x00	; 0
    10e2:	70 e0       	ldi	r23, 0x00	; 0
    10e4:	3e d1       	rcall	.+636    	; 0x1362 <memset>
    10e6:	ce 01       	movw	r24, r28
    10e8:	df 91       	pop	r29
    10ea:	cf 91       	pop	r28
    10ec:	1f 91       	pop	r17
    10ee:	0f 91       	pop	r16
    10f0:	08 95       	ret

000010f2 <malloc>:
    10f2:	cf 93       	push	r28
    10f4:	df 93       	push	r29
    10f6:	82 30       	cpi	r24, 0x02	; 2
    10f8:	91 05       	cpc	r25, r1
    10fa:	10 f4       	brcc	.+4      	; 0x1100 <__stack+0x1>
    10fc:	82 e0       	ldi	r24, 0x02	; 2
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	e0 91 e4 02 	lds	r30, 0x02E4
    1104:	f0 91 e5 02 	lds	r31, 0x02E5
    1108:	20 e0       	ldi	r18, 0x00	; 0
    110a:	30 e0       	ldi	r19, 0x00	; 0
    110c:	c0 e0       	ldi	r28, 0x00	; 0
    110e:	d0 e0       	ldi	r29, 0x00	; 0
    1110:	30 97       	sbiw	r30, 0x00	; 0
    1112:	11 f1       	breq	.+68     	; 0x1158 <__stack+0x59>
    1114:	40 81       	ld	r20, Z
    1116:	51 81       	ldd	r21, Z+1	; 0x01
    1118:	48 17       	cp	r20, r24
    111a:	59 07       	cpc	r21, r25
    111c:	c0 f0       	brcs	.+48     	; 0x114e <__stack+0x4f>
    111e:	48 17       	cp	r20, r24
    1120:	59 07       	cpc	r21, r25
    1122:	61 f4       	brne	.+24     	; 0x113c <__stack+0x3d>
    1124:	82 81       	ldd	r24, Z+2	; 0x02
    1126:	93 81       	ldd	r25, Z+3	; 0x03
    1128:	20 97       	sbiw	r28, 0x00	; 0
    112a:	19 f0       	breq	.+6      	; 0x1132 <__stack+0x33>
    112c:	9b 83       	std	Y+3, r25	; 0x03
    112e:	8a 83       	std	Y+2, r24	; 0x02
    1130:	2b c0       	rjmp	.+86     	; 0x1188 <__stack+0x89>
    1132:	90 93 e5 02 	sts	0x02E5, r25
    1136:	80 93 e4 02 	sts	0x02E4, r24
    113a:	26 c0       	rjmp	.+76     	; 0x1188 <__stack+0x89>
    113c:	21 15       	cp	r18, r1
    113e:	31 05       	cpc	r19, r1
    1140:	19 f0       	breq	.+6      	; 0x1148 <__stack+0x49>
    1142:	42 17       	cp	r20, r18
    1144:	53 07       	cpc	r21, r19
    1146:	18 f4       	brcc	.+6      	; 0x114e <__stack+0x4f>
    1148:	9a 01       	movw	r18, r20
    114a:	be 01       	movw	r22, r28
    114c:	df 01       	movw	r26, r30
    114e:	ef 01       	movw	r28, r30
    1150:	02 80       	ldd	r0, Z+2	; 0x02
    1152:	f3 81       	ldd	r31, Z+3	; 0x03
    1154:	e0 2d       	mov	r30, r0
    1156:	dc cf       	rjmp	.-72     	; 0x1110 <__stack+0x11>
    1158:	21 15       	cp	r18, r1
    115a:	31 05       	cpc	r19, r1
    115c:	09 f1       	breq	.+66     	; 0x11a0 <__stack+0xa1>
    115e:	28 1b       	sub	r18, r24
    1160:	39 0b       	sbc	r19, r25
    1162:	24 30       	cpi	r18, 0x04	; 4
    1164:	31 05       	cpc	r19, r1
    1166:	90 f4       	brcc	.+36     	; 0x118c <__stack+0x8d>
    1168:	12 96       	adiw	r26, 0x02	; 2
    116a:	8d 91       	ld	r24, X+
    116c:	9c 91       	ld	r25, X
    116e:	13 97       	sbiw	r26, 0x03	; 3
    1170:	61 15       	cp	r22, r1
    1172:	71 05       	cpc	r23, r1
    1174:	21 f0       	breq	.+8      	; 0x117e <__stack+0x7f>
    1176:	fb 01       	movw	r30, r22
    1178:	93 83       	std	Z+3, r25	; 0x03
    117a:	82 83       	std	Z+2, r24	; 0x02
    117c:	04 c0       	rjmp	.+8      	; 0x1186 <__stack+0x87>
    117e:	90 93 e5 02 	sts	0x02E5, r25
    1182:	80 93 e4 02 	sts	0x02E4, r24
    1186:	fd 01       	movw	r30, r26
    1188:	32 96       	adiw	r30, 0x02	; 2
    118a:	44 c0       	rjmp	.+136    	; 0x1214 <__stack+0x115>
    118c:	fd 01       	movw	r30, r26
    118e:	e2 0f       	add	r30, r18
    1190:	f3 1f       	adc	r31, r19
    1192:	81 93       	st	Z+, r24
    1194:	91 93       	st	Z+, r25
    1196:	22 50       	subi	r18, 0x02	; 2
    1198:	31 09       	sbc	r19, r1
    119a:	2d 93       	st	X+, r18
    119c:	3c 93       	st	X, r19
    119e:	3a c0       	rjmp	.+116    	; 0x1214 <__stack+0x115>
    11a0:	20 91 e2 02 	lds	r18, 0x02E2
    11a4:	30 91 e3 02 	lds	r19, 0x02E3
    11a8:	23 2b       	or	r18, r19
    11aa:	41 f4       	brne	.+16     	; 0x11bc <__stack+0xbd>
    11ac:	20 91 02 01 	lds	r18, 0x0102
    11b0:	30 91 03 01 	lds	r19, 0x0103
    11b4:	30 93 e3 02 	sts	0x02E3, r19
    11b8:	20 93 e2 02 	sts	0x02E2, r18
    11bc:	20 91 00 01 	lds	r18, 0x0100
    11c0:	30 91 01 01 	lds	r19, 0x0101
    11c4:	21 15       	cp	r18, r1
    11c6:	31 05       	cpc	r19, r1
    11c8:	41 f4       	brne	.+16     	; 0x11da <__stack+0xdb>
    11ca:	2d b7       	in	r18, 0x3d	; 61
    11cc:	3e b7       	in	r19, 0x3e	; 62
    11ce:	40 91 04 01 	lds	r20, 0x0104
    11d2:	50 91 05 01 	lds	r21, 0x0105
    11d6:	24 1b       	sub	r18, r20
    11d8:	35 0b       	sbc	r19, r21
    11da:	e0 91 e2 02 	lds	r30, 0x02E2
    11de:	f0 91 e3 02 	lds	r31, 0x02E3
    11e2:	e2 17       	cp	r30, r18
    11e4:	f3 07       	cpc	r31, r19
    11e6:	a0 f4       	brcc	.+40     	; 0x1210 <__stack+0x111>
    11e8:	2e 1b       	sub	r18, r30
    11ea:	3f 0b       	sbc	r19, r31
    11ec:	28 17       	cp	r18, r24
    11ee:	39 07       	cpc	r19, r25
    11f0:	78 f0       	brcs	.+30     	; 0x1210 <__stack+0x111>
    11f2:	ac 01       	movw	r20, r24
    11f4:	4e 5f       	subi	r20, 0xFE	; 254
    11f6:	5f 4f       	sbci	r21, 0xFF	; 255
    11f8:	24 17       	cp	r18, r20
    11fa:	35 07       	cpc	r19, r21
    11fc:	48 f0       	brcs	.+18     	; 0x1210 <__stack+0x111>
    11fe:	4e 0f       	add	r20, r30
    1200:	5f 1f       	adc	r21, r31
    1202:	50 93 e3 02 	sts	0x02E3, r21
    1206:	40 93 e2 02 	sts	0x02E2, r20
    120a:	81 93       	st	Z+, r24
    120c:	91 93       	st	Z+, r25
    120e:	02 c0       	rjmp	.+4      	; 0x1214 <__stack+0x115>
    1210:	e0 e0       	ldi	r30, 0x00	; 0
    1212:	f0 e0       	ldi	r31, 0x00	; 0
    1214:	cf 01       	movw	r24, r30
    1216:	df 91       	pop	r29
    1218:	cf 91       	pop	r28
    121a:	08 95       	ret

0000121c <free>:
    121c:	0f 93       	push	r16
    121e:	1f 93       	push	r17
    1220:	cf 93       	push	r28
    1222:	df 93       	push	r29
    1224:	00 97       	sbiw	r24, 0x00	; 0
    1226:	09 f4       	brne	.+2      	; 0x122a <free+0xe>
    1228:	8c c0       	rjmp	.+280    	; 0x1342 <free+0x126>
    122a:	fc 01       	movw	r30, r24
    122c:	32 97       	sbiw	r30, 0x02	; 2
    122e:	13 82       	std	Z+3, r1	; 0x03
    1230:	12 82       	std	Z+2, r1	; 0x02
    1232:	00 91 e4 02 	lds	r16, 0x02E4
    1236:	10 91 e5 02 	lds	r17, 0x02E5
    123a:	01 15       	cp	r16, r1
    123c:	11 05       	cpc	r17, r1
    123e:	81 f4       	brne	.+32     	; 0x1260 <free+0x44>
    1240:	20 81       	ld	r18, Z
    1242:	31 81       	ldd	r19, Z+1	; 0x01
    1244:	82 0f       	add	r24, r18
    1246:	93 1f       	adc	r25, r19
    1248:	20 91 e2 02 	lds	r18, 0x02E2
    124c:	30 91 e3 02 	lds	r19, 0x02E3
    1250:	28 17       	cp	r18, r24
    1252:	39 07       	cpc	r19, r25
    1254:	79 f5       	brne	.+94     	; 0x12b4 <free+0x98>
    1256:	f0 93 e3 02 	sts	0x02E3, r31
    125a:	e0 93 e2 02 	sts	0x02E2, r30
    125e:	71 c0       	rjmp	.+226    	; 0x1342 <free+0x126>
    1260:	d8 01       	movw	r26, r16
    1262:	40 e0       	ldi	r20, 0x00	; 0
    1264:	50 e0       	ldi	r21, 0x00	; 0
    1266:	ae 17       	cp	r26, r30
    1268:	bf 07       	cpc	r27, r31
    126a:	50 f4       	brcc	.+20     	; 0x1280 <free+0x64>
    126c:	12 96       	adiw	r26, 0x02	; 2
    126e:	2d 91       	ld	r18, X+
    1270:	3c 91       	ld	r19, X
    1272:	13 97       	sbiw	r26, 0x03	; 3
    1274:	ad 01       	movw	r20, r26
    1276:	21 15       	cp	r18, r1
    1278:	31 05       	cpc	r19, r1
    127a:	09 f1       	breq	.+66     	; 0x12be <free+0xa2>
    127c:	d9 01       	movw	r26, r18
    127e:	f3 cf       	rjmp	.-26     	; 0x1266 <free+0x4a>
    1280:	9d 01       	movw	r18, r26
    1282:	da 01       	movw	r26, r20
    1284:	33 83       	std	Z+3, r19	; 0x03
    1286:	22 83       	std	Z+2, r18	; 0x02
    1288:	60 81       	ld	r22, Z
    128a:	71 81       	ldd	r23, Z+1	; 0x01
    128c:	86 0f       	add	r24, r22
    128e:	97 1f       	adc	r25, r23
    1290:	82 17       	cp	r24, r18
    1292:	93 07       	cpc	r25, r19
    1294:	69 f4       	brne	.+26     	; 0x12b0 <free+0x94>
    1296:	ec 01       	movw	r28, r24
    1298:	28 81       	ld	r18, Y
    129a:	39 81       	ldd	r19, Y+1	; 0x01
    129c:	26 0f       	add	r18, r22
    129e:	37 1f       	adc	r19, r23
    12a0:	2e 5f       	subi	r18, 0xFE	; 254
    12a2:	3f 4f       	sbci	r19, 0xFF	; 255
    12a4:	31 83       	std	Z+1, r19	; 0x01
    12a6:	20 83       	st	Z, r18
    12a8:	8a 81       	ldd	r24, Y+2	; 0x02
    12aa:	9b 81       	ldd	r25, Y+3	; 0x03
    12ac:	93 83       	std	Z+3, r25	; 0x03
    12ae:	82 83       	std	Z+2, r24	; 0x02
    12b0:	45 2b       	or	r20, r21
    12b2:	29 f4       	brne	.+10     	; 0x12be <free+0xa2>
    12b4:	f0 93 e5 02 	sts	0x02E5, r31
    12b8:	e0 93 e4 02 	sts	0x02E4, r30
    12bc:	42 c0       	rjmp	.+132    	; 0x1342 <free+0x126>
    12be:	13 96       	adiw	r26, 0x03	; 3
    12c0:	fc 93       	st	X, r31
    12c2:	ee 93       	st	-X, r30
    12c4:	12 97       	sbiw	r26, 0x02	; 2
    12c6:	ed 01       	movw	r28, r26
    12c8:	49 91       	ld	r20, Y+
    12ca:	59 91       	ld	r21, Y+
    12cc:	9e 01       	movw	r18, r28
    12ce:	24 0f       	add	r18, r20
    12d0:	35 1f       	adc	r19, r21
    12d2:	e2 17       	cp	r30, r18
    12d4:	f3 07       	cpc	r31, r19
    12d6:	71 f4       	brne	.+28     	; 0x12f4 <free+0xd8>
    12d8:	80 81       	ld	r24, Z
    12da:	91 81       	ldd	r25, Z+1	; 0x01
    12dc:	84 0f       	add	r24, r20
    12de:	95 1f       	adc	r25, r21
    12e0:	02 96       	adiw	r24, 0x02	; 2
    12e2:	11 96       	adiw	r26, 0x01	; 1
    12e4:	9c 93       	st	X, r25
    12e6:	8e 93       	st	-X, r24
    12e8:	82 81       	ldd	r24, Z+2	; 0x02
    12ea:	93 81       	ldd	r25, Z+3	; 0x03
    12ec:	13 96       	adiw	r26, 0x03	; 3
    12ee:	9c 93       	st	X, r25
    12f0:	8e 93       	st	-X, r24
    12f2:	12 97       	sbiw	r26, 0x02	; 2
    12f4:	e0 e0       	ldi	r30, 0x00	; 0
    12f6:	f0 e0       	ldi	r31, 0x00	; 0
    12f8:	d8 01       	movw	r26, r16
    12fa:	12 96       	adiw	r26, 0x02	; 2
    12fc:	8d 91       	ld	r24, X+
    12fe:	9c 91       	ld	r25, X
    1300:	13 97       	sbiw	r26, 0x03	; 3
    1302:	00 97       	sbiw	r24, 0x00	; 0
    1304:	19 f0       	breq	.+6      	; 0x130c <free+0xf0>
    1306:	f8 01       	movw	r30, r16
    1308:	8c 01       	movw	r16, r24
    130a:	f6 cf       	rjmp	.-20     	; 0x12f8 <free+0xdc>
    130c:	8d 91       	ld	r24, X+
    130e:	9c 91       	ld	r25, X
    1310:	98 01       	movw	r18, r16
    1312:	2e 5f       	subi	r18, 0xFE	; 254
    1314:	3f 4f       	sbci	r19, 0xFF	; 255
    1316:	82 0f       	add	r24, r18
    1318:	93 1f       	adc	r25, r19
    131a:	20 91 e2 02 	lds	r18, 0x02E2
    131e:	30 91 e3 02 	lds	r19, 0x02E3
    1322:	28 17       	cp	r18, r24
    1324:	39 07       	cpc	r19, r25
    1326:	69 f4       	brne	.+26     	; 0x1342 <free+0x126>
    1328:	30 97       	sbiw	r30, 0x00	; 0
    132a:	29 f4       	brne	.+10     	; 0x1336 <free+0x11a>
    132c:	10 92 e5 02 	sts	0x02E5, r1
    1330:	10 92 e4 02 	sts	0x02E4, r1
    1334:	02 c0       	rjmp	.+4      	; 0x133a <free+0x11e>
    1336:	13 82       	std	Z+3, r1	; 0x03
    1338:	12 82       	std	Z+2, r1	; 0x02
    133a:	10 93 e3 02 	sts	0x02E3, r17
    133e:	00 93 e2 02 	sts	0x02E2, r16
    1342:	df 91       	pop	r29
    1344:	cf 91       	pop	r28
    1346:	1f 91       	pop	r17
    1348:	0f 91       	pop	r16
    134a:	08 95       	ret

0000134c <strnlen_P>:
    134c:	fc 01       	movw	r30, r24
    134e:	05 90       	lpm	r0, Z+
    1350:	61 50       	subi	r22, 0x01	; 1
    1352:	70 40       	sbci	r23, 0x00	; 0
    1354:	01 10       	cpse	r0, r1
    1356:	d8 f7       	brcc	.-10     	; 0x134e <strnlen_P+0x2>
    1358:	80 95       	com	r24
    135a:	90 95       	com	r25
    135c:	8e 0f       	add	r24, r30
    135e:	9f 1f       	adc	r25, r31
    1360:	08 95       	ret

00001362 <memset>:
    1362:	dc 01       	movw	r26, r24
    1364:	01 c0       	rjmp	.+2      	; 0x1368 <memset+0x6>
    1366:	6d 93       	st	X+, r22
    1368:	41 50       	subi	r20, 0x01	; 1
    136a:	50 40       	sbci	r21, 0x00	; 0
    136c:	e0 f7       	brcc	.-8      	; 0x1366 <memset+0x4>
    136e:	08 95       	ret

00001370 <strnlen>:
    1370:	fc 01       	movw	r30, r24
    1372:	61 50       	subi	r22, 0x01	; 1
    1374:	70 40       	sbci	r23, 0x00	; 0
    1376:	01 90       	ld	r0, Z+
    1378:	01 10       	cpse	r0, r1
    137a:	d8 f7       	brcc	.-10     	; 0x1372 <strnlen+0x2>
    137c:	80 95       	com	r24
    137e:	90 95       	com	r25
    1380:	8e 0f       	add	r24, r30
    1382:	9f 1f       	adc	r25, r31
    1384:	08 95       	ret

00001386 <fputc>:
    1386:	0f 93       	push	r16
    1388:	1f 93       	push	r17
    138a:	cf 93       	push	r28
    138c:	df 93       	push	r29
    138e:	fb 01       	movw	r30, r22
    1390:	23 81       	ldd	r18, Z+3	; 0x03
    1392:	21 fd       	sbrc	r18, 1
    1394:	03 c0       	rjmp	.+6      	; 0x139c <fputc+0x16>
    1396:	8f ef       	ldi	r24, 0xFF	; 255
    1398:	9f ef       	ldi	r25, 0xFF	; 255
    139a:	28 c0       	rjmp	.+80     	; 0x13ec <fputc+0x66>
    139c:	22 ff       	sbrs	r18, 2
    139e:	16 c0       	rjmp	.+44     	; 0x13cc <fputc+0x46>
    13a0:	46 81       	ldd	r20, Z+6	; 0x06
    13a2:	57 81       	ldd	r21, Z+7	; 0x07
    13a4:	24 81       	ldd	r18, Z+4	; 0x04
    13a6:	35 81       	ldd	r19, Z+5	; 0x05
    13a8:	42 17       	cp	r20, r18
    13aa:	53 07       	cpc	r21, r19
    13ac:	44 f4       	brge	.+16     	; 0x13be <fputc+0x38>
    13ae:	a0 81       	ld	r26, Z
    13b0:	b1 81       	ldd	r27, Z+1	; 0x01
    13b2:	9d 01       	movw	r18, r26
    13b4:	2f 5f       	subi	r18, 0xFF	; 255
    13b6:	3f 4f       	sbci	r19, 0xFF	; 255
    13b8:	31 83       	std	Z+1, r19	; 0x01
    13ba:	20 83       	st	Z, r18
    13bc:	8c 93       	st	X, r24
    13be:	26 81       	ldd	r18, Z+6	; 0x06
    13c0:	37 81       	ldd	r19, Z+7	; 0x07
    13c2:	2f 5f       	subi	r18, 0xFF	; 255
    13c4:	3f 4f       	sbci	r19, 0xFF	; 255
    13c6:	37 83       	std	Z+7, r19	; 0x07
    13c8:	26 83       	std	Z+6, r18	; 0x06
    13ca:	10 c0       	rjmp	.+32     	; 0x13ec <fputc+0x66>
    13cc:	eb 01       	movw	r28, r22
    13ce:	09 2f       	mov	r16, r25
    13d0:	18 2f       	mov	r17, r24
    13d2:	00 84       	ldd	r0, Z+8	; 0x08
    13d4:	f1 85       	ldd	r31, Z+9	; 0x09
    13d6:	e0 2d       	mov	r30, r0
    13d8:	09 95       	icall
    13da:	89 2b       	or	r24, r25
    13dc:	e1 f6       	brne	.-72     	; 0x1396 <fputc+0x10>
    13de:	8e 81       	ldd	r24, Y+6	; 0x06
    13e0:	9f 81       	ldd	r25, Y+7	; 0x07
    13e2:	01 96       	adiw	r24, 0x01	; 1
    13e4:	9f 83       	std	Y+7, r25	; 0x07
    13e6:	8e 83       	std	Y+6, r24	; 0x06
    13e8:	81 2f       	mov	r24, r17
    13ea:	90 2f       	mov	r25, r16
    13ec:	df 91       	pop	r29
    13ee:	cf 91       	pop	r28
    13f0:	1f 91       	pop	r17
    13f2:	0f 91       	pop	r16
    13f4:	08 95       	ret

000013f6 <__ultoa_invert>:
    13f6:	fa 01       	movw	r30, r20
    13f8:	aa 27       	eor	r26, r26
    13fa:	28 30       	cpi	r18, 0x08	; 8
    13fc:	51 f1       	breq	.+84     	; 0x1452 <__ultoa_invert+0x5c>
    13fe:	20 31       	cpi	r18, 0x10	; 16
    1400:	81 f1       	breq	.+96     	; 0x1462 <__ultoa_invert+0x6c>
    1402:	e8 94       	clt
    1404:	6f 93       	push	r22
    1406:	6e 7f       	andi	r22, 0xFE	; 254
    1408:	6e 5f       	subi	r22, 0xFE	; 254
    140a:	7f 4f       	sbci	r23, 0xFF	; 255
    140c:	8f 4f       	sbci	r24, 0xFF	; 255
    140e:	9f 4f       	sbci	r25, 0xFF	; 255
    1410:	af 4f       	sbci	r26, 0xFF	; 255
    1412:	b1 e0       	ldi	r27, 0x01	; 1
    1414:	3e d0       	rcall	.+124    	; 0x1492 <__ultoa_invert+0x9c>
    1416:	b4 e0       	ldi	r27, 0x04	; 4
    1418:	3c d0       	rcall	.+120    	; 0x1492 <__ultoa_invert+0x9c>
    141a:	67 0f       	add	r22, r23
    141c:	78 1f       	adc	r23, r24
    141e:	89 1f       	adc	r24, r25
    1420:	9a 1f       	adc	r25, r26
    1422:	a1 1d       	adc	r26, r1
    1424:	68 0f       	add	r22, r24
    1426:	79 1f       	adc	r23, r25
    1428:	8a 1f       	adc	r24, r26
    142a:	91 1d       	adc	r25, r1
    142c:	a1 1d       	adc	r26, r1
    142e:	6a 0f       	add	r22, r26
    1430:	71 1d       	adc	r23, r1
    1432:	81 1d       	adc	r24, r1
    1434:	91 1d       	adc	r25, r1
    1436:	a1 1d       	adc	r26, r1
    1438:	20 d0       	rcall	.+64     	; 0x147a <__ultoa_invert+0x84>
    143a:	09 f4       	brne	.+2      	; 0x143e <__ultoa_invert+0x48>
    143c:	68 94       	set
    143e:	3f 91       	pop	r19
    1440:	2a e0       	ldi	r18, 0x0A	; 10
    1442:	26 9f       	mul	r18, r22
    1444:	11 24       	eor	r1, r1
    1446:	30 19       	sub	r19, r0
    1448:	30 5d       	subi	r19, 0xD0	; 208
    144a:	31 93       	st	Z+, r19
    144c:	de f6       	brtc	.-74     	; 0x1404 <__ultoa_invert+0xe>
    144e:	cf 01       	movw	r24, r30
    1450:	08 95       	ret
    1452:	46 2f       	mov	r20, r22
    1454:	47 70       	andi	r20, 0x07	; 7
    1456:	40 5d       	subi	r20, 0xD0	; 208
    1458:	41 93       	st	Z+, r20
    145a:	b3 e0       	ldi	r27, 0x03	; 3
    145c:	0f d0       	rcall	.+30     	; 0x147c <__ultoa_invert+0x86>
    145e:	c9 f7       	brne	.-14     	; 0x1452 <__ultoa_invert+0x5c>
    1460:	f6 cf       	rjmp	.-20     	; 0x144e <__ultoa_invert+0x58>
    1462:	46 2f       	mov	r20, r22
    1464:	4f 70       	andi	r20, 0x0F	; 15
    1466:	40 5d       	subi	r20, 0xD0	; 208
    1468:	4a 33       	cpi	r20, 0x3A	; 58
    146a:	18 f0       	brcs	.+6      	; 0x1472 <__ultoa_invert+0x7c>
    146c:	49 5d       	subi	r20, 0xD9	; 217
    146e:	31 fd       	sbrc	r19, 1
    1470:	40 52       	subi	r20, 0x20	; 32
    1472:	41 93       	st	Z+, r20
    1474:	02 d0       	rcall	.+4      	; 0x147a <__ultoa_invert+0x84>
    1476:	a9 f7       	brne	.-22     	; 0x1462 <__ultoa_invert+0x6c>
    1478:	ea cf       	rjmp	.-44     	; 0x144e <__ultoa_invert+0x58>
    147a:	b4 e0       	ldi	r27, 0x04	; 4
    147c:	a6 95       	lsr	r26
    147e:	97 95       	ror	r25
    1480:	87 95       	ror	r24
    1482:	77 95       	ror	r23
    1484:	67 95       	ror	r22
    1486:	ba 95       	dec	r27
    1488:	c9 f7       	brne	.-14     	; 0x147c <__ultoa_invert+0x86>
    148a:	00 97       	sbiw	r24, 0x00	; 0
    148c:	61 05       	cpc	r22, r1
    148e:	71 05       	cpc	r23, r1
    1490:	08 95       	ret
    1492:	9b 01       	movw	r18, r22
    1494:	ac 01       	movw	r20, r24
    1496:	0a 2e       	mov	r0, r26
    1498:	06 94       	lsr	r0
    149a:	57 95       	ror	r21
    149c:	47 95       	ror	r20
    149e:	37 95       	ror	r19
    14a0:	27 95       	ror	r18
    14a2:	ba 95       	dec	r27
    14a4:	c9 f7       	brne	.-14     	; 0x1498 <__ultoa_invert+0xa2>
    14a6:	62 0f       	add	r22, r18
    14a8:	73 1f       	adc	r23, r19
    14aa:	84 1f       	adc	r24, r20
    14ac:	95 1f       	adc	r25, r21
    14ae:	a0 1d       	adc	r26, r0
    14b0:	08 95       	ret

000014b2 <_exit>:
    14b2:	f8 94       	cli

000014b4 <__stop_program>:
    14b4:	ff cf       	rjmp	.-2      	; 0x14b4 <__stop_program>
